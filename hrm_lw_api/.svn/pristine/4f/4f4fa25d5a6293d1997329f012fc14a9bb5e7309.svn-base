//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRMS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_hrmsEntities : DbContext
    {
        public db_hrmsEntities()
            : base("name=db_hrmsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<log_evaluate> log_evaluate { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tb_additionalDeduction> tb_additionalDeduction { get; set; }
        public virtual DbSet<tb_additionalPay> tb_additionalPay { get; set; }
        public virtual DbSet<tb_adv_bonus> tb_adv_bonus { get; set; }
        public virtual DbSet<tb_advpay> tb_advpay { get; set; }
        public virtual DbSet<tb_allowanceType> tb_allowanceType { get; set; }
        public virtual DbSet<tb_app_permission> tb_app_permission { get; set; }
        public virtual DbSet<tb_app_role> tb_app_role { get; set; }
        public virtual DbSet<tb_app_role_permission> tb_app_role_permission { get; set; }
        public virtual DbSet<tb_approvalSetting> tb_approvalSetting { get; set; }
        public virtual DbSet<tb_appType> tb_appType { get; set; }
        public virtual DbSet<tb_bank> tb_bank { get; set; }
        public virtual DbSet<tb_bonus_book> tb_bonus_book { get; set; }
        public virtual DbSet<tb_bonus_summary> tb_bonus_summary { get; set; }
        public virtual DbSet<tb_company> tb_company { get; set; }
        public virtual DbSet<tb_costCenter> tb_costCenter { get; set; }
        public virtual DbSet<tb_deduct_loan> tb_deduct_loan { get; set; }
        public virtual DbSet<tb_deduct_sldrt> tb_deduct_sldrt { get; set; }
        public virtual DbSet<tb_deductionType> tb_deductionType { get; set; }
        public virtual DbSet<tb_delagate> tb_delagate { get; set; }
        public virtual DbSet<tb_delegate_request> tb_delegate_request { get; set; }
        public virtual DbSet<tb_department> tb_department { get; set; }
        public virtual DbSet<tb_deptGroup> tb_deptGroup { get; set; }
        public virtual DbSet<tb_district> tb_district { get; set; }
        public virtual DbSet<tb_educationType> tb_educationType { get; set; }
        public virtual DbSet<tb_email_send> tb_email_send { get; set; }
        public virtual DbSet<tb_emp_approve> tb_emp_approve { get; set; }
        public virtual DbSet<tb_emp_question> tb_emp_question { get; set; }
        public virtual DbSet<tb_empAllowance> tb_empAllowance { get; set; }
        public virtual DbSet<tb_empBankAccount> tb_empBankAccount { get; set; }
        public virtual DbSet<tb_empDeduction> tb_empDeduction { get; set; }
        public virtual DbSet<tb_empEducation> tb_empEducation { get; set; }
        public virtual DbSet<tb_empFamily> tb_empFamily { get; set; }
        public virtual DbSet<tb_empGroup> tb_empGroup { get; set; }
        public virtual DbSet<tb_empIncome> tb_empIncome { get; set; }
        public virtual DbSet<tb_empInfo> tb_empInfo { get; set; }
        public virtual DbSet<tb_empLevel> tb_empLevel { get; set; }
        public virtual DbSet<tb_employees> tb_employees { get; set; }
        public virtual DbSet<tb_empSalary> tb_empSalary { get; set; }
        public virtual DbSet<tb_empSSO> tb_empSSO { get; set; }
        public virtual DbSet<tb_empType> tb_empType { get; set; }
        public virtual DbSet<tb_ethnic> tb_ethnic { get; set; }
        public virtual DbSet<tb_evaluate_emp> tb_evaluate_emp { get; set; }
        public virtual DbSet<tb_evaluate_reject> tb_evaluate_reject { get; set; }
        public virtual DbSet<tb_fhf> tb_fhf { get; set; }
        public virtual DbSet<tb_fstatus> tb_fstatus { get; set; }
        public virtual DbSet<tb_gender> tb_gender { get; set; }
        public virtual DbSet<tb_getHistoryLeave> tb_getHistoryLeave { get; set; }
        public virtual DbSet<tb_groupCostCenter> tb_groupCostCenter { get; set; }
        public virtual DbSet<tb_incentive> tb_incentive { get; set; }
        public virtual DbSet<tb_incomType> tb_incomType { get; set; }
        public virtual DbSet<tb_languages> tb_languages { get; set; }
        public virtual DbSet<tb_leave_approve_group> tb_leave_approve_group { get; set; }
        public virtual DbSet<tb_leaveApprove> tb_leaveApprove { get; set; }
        public virtual DbSet<tb_leaveRequest> tb_leaveRequest { get; set; }
        public virtual DbSet<tb_leaveRequestDetail> tb_leaveRequestDetail { get; set; }
        public virtual DbSet<tb_leaverequestdetailx> tb_leaverequestdetailx { get; set; }
        public virtual DbSet<tb_leaveSetting> tb_leaveSetting { get; set; }
        public virtual DbSet<tb_leaveTranType> tb_leaveTranType { get; set; }
        public virtual DbSet<tb_leaveType> tb_leaveType { get; set; }
        public virtual DbSet<tb_loan> tb_loan { get; set; }
        public virtual DbSet<tb_loanApprove> tb_loanApprove { get; set; }
        public virtual DbSet<tb_loanDetail> tb_loanDetail { get; set; }
        public virtual DbSet<tb_log> tb_log { get; set; }
        public virtual DbSet<tb_menu> tb_menu { get; set; }
        public virtual DbSet<tb_month> tb_month { get; set; }
        public virtual DbSet<tb_nationality> tb_nationality { get; set; }
        public virtual DbSet<tb_noti> tb_noti { get; set; }
        public virtual DbSet<tb_noti_send> tb_noti_send { get; set; }
        public virtual DbSet<tb_noti_status> tb_noti_status { get; set; }
        public virtual DbSet<tb_ot_setting> tb_ot_setting { get; set; }
        public virtual DbSet<tb_otApprove> tb_otApprove { get; set; }
        public virtual DbSet<tb_otRequest> tb_otRequest { get; set; }
        public virtual DbSet<tb_otRequestDetail> tb_otRequestDetail { get; set; }
        public virtual DbSet<tb_otType> tb_otType { get; set; }
        public virtual DbSet<tb_pass_history> tb_pass_history { get; set; }
        public virtual DbSet<tb_payFHF> tb_payFHF { get; set; }
        public virtual DbSet<tb_paymentRecord> tb_paymentRecord { get; set; }
        public virtual DbSet<tb_paymentRecordApprove> tb_paymentRecordApprove { get; set; }
        public virtual DbSet<tb_pension_summary> tb_pension_summary { get; set; }
        public virtual DbSet<tb_permission> tb_permission { get; set; }
        public virtual DbSet<tb_positionTitle> tb_positionTitle { get; set; }
        public virtual DbSet<tb_pr_approve> tb_pr_approve { get; set; }
        public virtual DbSet<tb_process_status> tb_process_status { get; set; }
        public virtual DbSet<tb_province> tb_province { get; set; }
        public virtual DbSet<tb_publicHoliday> tb_publicHoliday { get; set; }
        public virtual DbSet<tb_race> tb_race { get; set; }
        public virtual DbSet<tb_religion> tb_religion { get; set; }
        public virtual DbSet<tb_report_list> tb_report_list { get; set; }
        public virtual DbSet<tb_request_upload> tb_request_upload { get; set; }
        public virtual DbSet<tb_role> tb_role { get; set; }
        public virtual DbSet<tb_role_permission> tb_role_permission { get; set; }
        public virtual DbSet<tb_rpt_evaluate_d> tb_rpt_evaluate_d { get; set; }
        public virtual DbSet<tb_rpt_evaluate_h> tb_rpt_evaluate_h { get; set; }
        public virtual DbSet<tb_salary_approve> tb_salary_approve { get; set; }
        public virtual DbSet<tb_salary_list> tb_salary_list { get; set; }
        public virtual DbSet<tb_secure_setting> tb_secure_setting { get; set; }
        public virtual DbSet<tb_setting_doc> tb_setting_doc { get; set; }
        public virtual DbSet<tb_severance> tb_severance { get; set; }
        public virtual DbSet<tb_shift> tb_shift { get; set; }
        public virtual DbSet<tb_shiftWorking> tb_shiftWorking { get; set; }
        public virtual DbSet<tb_sldrt> tb_sldrt { get; set; }
        public virtual DbSet<tb_SLDRT_loan> tb_SLDRT_loan { get; set; }
        public virtual DbSet<tb_SLDRT_loanApprove> tb_SLDRT_loanApprove { get; set; }
        public virtual DbSet<tb_SLDRT_loanDetail> tb_SLDRT_loanDetail { get; set; }
        public virtual DbSet<tb_spouse> tb_spouse { get; set; }
        public virtual DbSet<tb_SPRetirement> tb_SPRetirement { get; set; }
        public virtual DbSet<tb_sso> tb_sso { get; set; }
        public virtual DbSet<tb_ssoType> tb_ssoType { get; set; }
        public virtual DbSet<tb_status> tb_status { get; set; }
        public virtual DbSet<tb_summary_bonus> tb_summary_bonus { get; set; }
        public virtual DbSet<tb_summary_pension> tb_summary_pension { get; set; }
        public virtual DbSet<tb_taxs> tb_taxs { get; set; }
        public virtual DbSet<tb_TaxType> tb_TaxType { get; set; }
        public virtual DbSet<tb_threshing> tb_threshing { get; set; }
        public virtual DbSet<tb_unit> tb_unit { get; set; }
        public virtual DbSet<tb_upload_bonus> tb_upload_bonus { get; set; }
        public virtual DbSet<tb_users> tb_users { get; set; }
        public virtual DbSet<tb_workingDay> tb_workingDay { get; set; }
        public virtual DbSet<tb_workingStatus> tb_workingStatus { get; set; }
        public virtual DbSet<tbl_p_commentquestionpartbyDirector> tbl_p_commentquestionpartbyDirector { get; set; }
        public virtual DbSet<tbl_p_commentUpdateIncome> tbl_p_commentUpdateIncome { get; set; }
        public virtual DbSet<tbl_p_employeeHeaderquestion> tbl_p_employeeHeaderquestion { get; set; }
        public virtual DbSet<tbl_P_employeeLevel_GroupLevels> tbl_P_employeeLevel_GroupLevels { get; set; }
        public virtual DbSet<tbl_P_GroupLevels> tbl_P_GroupLevels { get; set; }
        public virtual DbSet<tbl_p_grouppermission> tbl_p_grouppermission { get; set; }
        public virtual DbSet<tbl_p_grouppermissionLoginbyLevels> tbl_p_grouppermissionLoginbyLevels { get; set; }
        public virtual DbSet<tbl_p_headerquestion> tbl_p_headerquestion { get; set; }
        public virtual DbSet<tbl_p_HeaderquestionEmployeeComments> tbl_p_HeaderquestionEmployeeComments { get; set; }
        public virtual DbSet<tbl_p_headerquestionEmployeeScoreSummary> tbl_p_headerquestionEmployeeScoreSummary { get; set; }
        public virtual DbSet<tbl_p_HeaderquestionGrouplevel> tbl_p_HeaderquestionGrouplevel { get; set; }
        public virtual DbSet<tbl_p_listquestionemp> tbl_p_listquestionemp { get; set; }
        public virtual DbSet<tbl_p_listquestionempdetails> tbl_p_listquestionempdetails { get; set; }
        public virtual DbSet<tbl_p_permission> tbl_p_permission { get; set; }
        public virtual DbSet<tbl_p_questionpart> tbl_p_questionpart { get; set; }
        public virtual DbSet<tbl_p_questlistdetails> tbl_p_questlistdetails { get; set; }
        public virtual DbSet<tbl_p_reportperformancereview> tbl_p_reportperformancereview { get; set; }
        public virtual DbSet<tbl_p_score> tbl_p_score { get; set; }
        public virtual DbSet<tbl_p_typequestion> tbl_p_typequestion { get; set; }
        public virtual DbSet<tbl_p_UserAdmin> tbl_p_UserAdmin { get; set; }
        public virtual DbSet<tbl_P_Userlevels> tbl_P_Userlevels { get; set; }
        public virtual DbSet<tmp_checkworkday> tmp_checkworkday { get; set; }
        public virtual DbSet<tmp_emp> tmp_emp { get; set; }
        public virtual DbSet<tmp_empMgr> tmp_empMgr { get; set; }
        public virtual DbSet<tmp_fhf> tmp_fhf { get; set; }
        public virtual DbSet<tmp_loan> tmp_loan { get; set; }
        public virtual DbSet<tmp_notiMenu> tmp_notiMenu { get; set; }
        public virtual DbSet<tmp_pass> tmp_pass { get; set; }
        public virtual DbSet<tmp_ppp> tmp_ppp { get; set; }
        public virtual DbSet<tmp_reset_pass> tmp_reset_pass { get; set; }
        public virtual DbSet<tmp_rpt1006> tmp_rpt1006 { get; set; }
        public virtual DbSet<tmp_rpt1011> tmp_rpt1011 { get; set; }
        public virtual DbSet<tmp_rpt1012> tmp_rpt1012 { get; set; }
        public virtual DbSet<tmp_salary_month> tmp_salary_month { get; set; }
        public virtual DbSet<tmp_shiftWorkingDay> tmp_shiftWorkingDay { get; set; }
        public virtual DbSet<tmp_sum_working> tmp_sum_working { get; set; }
        public virtual DbSet<tmp_tax> tmp_tax { get; set; }
        public virtual DbSet<tmp_view_upload> tmp_view_upload { get; set; }
        public virtual DbSet<tmp_viewSumLeave> tmp_viewSumLeave { get; set; }
        public virtual DbSet<tb_checkInOut> tb_checkInOut { get; set; }
        public virtual DbSet<tb_lang> tb_lang { get; set; }
        public virtual DbSet<tb_news> tb_news { get; set; }
        public virtual DbSet<tb_next_noti> tb_next_noti { get; set; }
        public virtual DbSet<tb_tasks> tb_tasks { get; set; }
        public virtual DbSet<tmp_log_command> tmp_log_command { get; set; }
        public virtual DbSet<v_advBonus> v_advBonus { get; set; }
        public virtual DbSet<v_app_noti> v_app_noti { get; set; }
        public virtual DbSet<v_app_permission> v_app_permission { get; set; }
        public virtual DbSet<v_approved> v_approved { get; set; }
        public virtual DbSet<v_DashbordSumOT> v_DashbordSumOT { get; set; }
        public virtual DbSet<v_dateSalaryLastMonth> v_dateSalaryLastMonth { get; set; }
        public virtual DbSet<v_dept_unit_employee> v_dept_unit_employee { get; set; }
        public virtual DbSet<v_email_noti> v_email_noti { get; set; }
        public virtual DbSet<v_emp_leave> v_emp_leave { get; set; }
        public virtual DbSet<v_emp_ot> v_emp_ot { get; set; }
        public virtual DbSet<v_emp_question_by_group> v_emp_question_by_group { get; set; }
        public virtual DbSet<v_empdept> v_empdept { get; set; }
        public virtual DbSet<v_empDob> v_empDob { get; set; }
        public virtual DbSet<v_empIncome> v_empIncome { get; set; }
        public virtual DbSet<v_empInfo> v_empInfo { get; set; }
        public virtual DbSet<v_empleaverequestall> v_empleaverequestall { get; set; }
        public virtual DbSet<v_empleaverequestallbymgrid> v_empleaverequestallbymgrid { get; set; }
        public virtual DbSet<v_employeeleave_thisyear> v_employeeleave_thisyear { get; set; }
        public virtual DbSet<v_employeeLeavedetails> v_employeeLeavedetails { get; set; }
        public virtual DbSet<v_employess> v_employess { get; set; }
        public virtual DbSet<v_employess2> v_employess2 { get; set; }
        public virtual DbSet<v_empOT> v_empOT { get; set; }
        public virtual DbSet<v_empOT_request> v_empOT_request { get; set; }
        public virtual DbSet<v_empPaymentRecord> v_empPaymentRecord { get; set; }
        public virtual DbSet<v_evaluate_header> v_evaluate_header { get; set; }
        public virtual DbSet<v_evaluate_header_1> v_evaluate_header_1 { get; set; }
        public virtual DbSet<v_evaluate_header_2> v_evaluate_header_2 { get; set; }
        public virtual DbSet<v_evaluate_header_3> v_evaluate_header_3 { get; set; }
        public virtual DbSet<v_fingerCheck> v_fingerCheck { get; set; }
        public virtual DbSet<v_iBankName> v_iBankName { get; set; }
        public virtual DbSet<v_leaveBalace> v_leaveBalace { get; set; }
        public virtual DbSet<v_leaveNotApproved> v_leaveNotApproved { get; set; }
        public virtual DbSet<v_leaverequest> v_leaverequest { get; set; }
        public virtual DbSet<v_leaverequestalldetails> v_leaverequestalldetails { get; set; }
        public virtual DbSet<v_leaverequestalldetails_2> v_leaverequestalldetails_2 { get; set; }
        public virtual DbSet<v_loan> v_loan { get; set; }
        public virtual DbSet<v_Log> v_Log { get; set; }
        public virtual DbSet<v_mgr_emp> v_mgr_emp { get; set; }
        public virtual DbSet<v_mobile_paymentrecord> v_mobile_paymentrecord { get; set; }
        public virtual DbSet<v_myRequest> v_myRequest { get; set; }
        public virtual DbSet<v_noti> v_noti { get; set; }
        public virtual DbSet<v_p_headerquestion> v_p_headerquestion { get; set; }
        public virtual DbSet<v_p_headerquestion_1> v_p_headerquestion_1 { get; set; }
        public virtual DbSet<v_paymentReccordDetail> v_paymentReccordDetail { get; set; }
        public virtual DbSet<v_paymentRecord> v_paymentRecord { get; set; }
        public virtual DbSet<v_paymentYearmonth> v_paymentYearmonth { get; set; }
        public virtual DbSet<v_publicHoliday> v_publicHoliday { get; set; }
        public virtual DbSet<v_reportOTDetailsbyEmp> v_reportOTDetailsbyEmp { get; set; }
        public virtual DbSet<v_request_all> v_request_all { get; set; }
        public virtual DbSet<v_rpt1013_only2person> v_rpt1013_only2person { get; set; }
        public virtual DbSet<v_salary_list> v_salary_list { get; set; }
        public virtual DbSet<v_selEmpHeader> v_selEmpHeader { get; set; }
        public virtual DbSet<v_SLDRT_loan> v_SLDRT_loan { get; set; }
        public virtual DbSet<v_sumEmpLeave> v_sumEmpLeave { get; set; }
        public virtual DbSet<v_sumEmpLeaveName> v_sumEmpLeaveName { get; set; }
        public virtual DbSet<v_terminate> v_terminate { get; set; }
        public virtual DbSet<v_unit> v_unit { get; set; }
        public virtual DbSet<v_upload_finger> v_upload_finger { get; set; }
        public virtual DbSet<v_user_permission> v_user_permission { get; set; }
        public virtual DbSet<v_users> v_users { get; set; }
        public virtual DbSet<View_1> View_1 { get; set; }
        public virtual DbSet<vm_EmployeeDetails_All> vm_EmployeeDetails_All { get; set; }
        public virtual DbSet<vm_EmployeeDetailsWorkStatus> vm_EmployeeDetailsWorkStatus { get; set; }
        public virtual DbSet<vm_EmployeeDetailsWorkStatus_1> vm_EmployeeDetailsWorkStatus_1 { get; set; }
        public virtual DbSet<vm_p_commentquestionpartbyDirector> vm_p_commentquestionpartbyDirector { get; set; }
        public virtual DbSet<vm_p_displayHeaderquestionGrouplevelbyEmployeee> vm_p_displayHeaderquestionGrouplevelbyEmployeee { get; set; }
        public virtual DbSet<vm_p_displayUserOnlyHR> vm_p_displayUserOnlyHR { get; set; }
        public virtual DbSet<vm_p_employee_in_HeaderquestionGroupLevels> vm_p_employee_in_HeaderquestionGroupLevels { get; set; }
        public virtual DbSet<vm_p_employeeheaderquestion> vm_p_employeeheaderquestion { get; set; }
        public virtual DbSet<vm_p_employeelevel_grouplevels> vm_p_employeelevel_grouplevels { get; set; }
        public virtual DbSet<vm_p_grouppermissionloginbylevels> vm_p_grouppermissionloginbylevels { get; set; }
        public virtual DbSet<vm_p_headerquestionemployeecomments> vm_p_headerquestionemployeecomments { get; set; }
        public virtual DbSet<vm_p_headerquestionemployeefinishedgroup> vm_p_headerquestionemployeefinishedgroup { get; set; }
        public virtual DbSet<vm_p_headerquestionemployeescoresummary> vm_p_headerquestionemployeescoresummary { get; set; }
        public virtual DbSet<vm_p_headerquestiongrouplevel> vm_p_headerquestiongrouplevel { get; set; }
        public virtual DbSet<vm_p_listemployeeinHeaderquestion> vm_p_listemployeeinHeaderquestion { get; set; }
        public virtual DbSet<vm_p_listquestionbyemployee> vm_p_listquestionbyemployee { get; set; }
        public virtual DbSet<vm_p_listquestionbyemployeegenerate> vm_p_listquestionbyemployeegenerate { get; set; }
        public virtual DbSet<vm_p_listquestionempdetails> vm_p_listquestionempdetails { get; set; }
        public virtual DbSet<vm_p_listquestionempdetailsbyowner> vm_p_listquestionempdetailsbyowner { get; set; }
        public virtual DbSet<vm_p_quesitondetailslistemployeeall> vm_p_quesitondetailslistemployeeall { get; set; }
        public virtual DbSet<vm_p_questionlistdetails> vm_p_questionlistdetails { get; set; }
        public virtual DbSet<vm_p_questionlistdetailsUpdate> vm_p_questionlistdetailsUpdate { get; set; }
        public virtual DbSet<vm_p_questionlistheaderquestionUpdate> vm_p_questionlistheaderquestionUpdate { get; set; }
        public virtual DbSet<vm_p_questionpart> vm_p_questionpart { get; set; }
    
        public virtual int p_approve_finger(string transactionNo, Nullable<int> empID, Nullable<int> tmpID, Nullable<int> workMonth, Nullable<int> workYear, Nullable<int> statusApprove)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var tmpIDParameter = tmpID.HasValue ?
                new ObjectParameter("tmpID", tmpID) :
                new ObjectParameter("tmpID", typeof(int));
    
            var workMonthParameter = workMonth.HasValue ?
                new ObjectParameter("workMonth", workMonth) :
                new ObjectParameter("workMonth", typeof(int));
    
            var workYearParameter = workYear.HasValue ?
                new ObjectParameter("workYear", workYear) :
                new ObjectParameter("workYear", typeof(int));
    
            var statusApproveParameter = statusApprove.HasValue ?
                new ObjectParameter("statusApprove", statusApprove) :
                new ObjectParameter("statusApprove", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_approve_finger", transactionNoParameter, empIDParameter, tmpIDParameter, workMonthParameter, workYearParameter, statusApproveParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_ApproveRequest(Nullable<int> requestID, Nullable<int> empID, string noted, Nullable<int> deptID, string requestNo, Nullable<int> user_add, Nullable<int> approveTypeID, Nullable<int> isApprove)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("deptID", deptID) :
                new ObjectParameter("deptID", typeof(int));
    
            var requestNoParameter = requestNo != null ?
                new ObjectParameter("RequestNo", requestNo) :
                new ObjectParameter("RequestNo", typeof(string));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            var approveTypeIDParameter = approveTypeID.HasValue ?
                new ObjectParameter("approveTypeID", approveTypeID) :
                new ObjectParameter("approveTypeID", typeof(int));
    
            var isApproveParameter = isApprove.HasValue ?
                new ObjectParameter("isApprove", isApprove) :
                new ObjectParameter("isApprove", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_ApproveRequest", requestIDParameter, empIDParameter, notedParameter, deptIDParameter, requestNoParameter, user_addParameter, approveTypeIDParameter, isApproveParameter);
        }
    
        public virtual int P_clear_workingday(Nullable<int> workMonth, Nullable<int> workYear)
        {
            var workMonthParameter = workMonth.HasValue ?
                new ObjectParameter("workMonth", workMonth) :
                new ObjectParameter("workMonth", typeof(int));
    
            var workYearParameter = workYear.HasValue ?
                new ObjectParameter("workYear", workYear) :
                new ObjectParameter("workYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_clear_workingday", workMonthParameter, workYearParameter);
        }
    
        public virtual int p_i_additionalDeduction(string transactionNo, Nullable<int> empID, string empNo, string fullName, string deductDate, Nullable<double> deductAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var deductDateParameter = deductDate != null ?
                new ObjectParameter("deductDate", deductDate) :
                new ObjectParameter("deductDate", typeof(string));
    
            var deductAmountParameter = deductAmount.HasValue ?
                new ObjectParameter("deductAmount", deductAmount) :
                new ObjectParameter("deductAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_additionalDeduction", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, deductDateParameter, deductAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_additionalPay(string transactionNo, Nullable<int> empID, string empNo, string fullName, string payDate, Nullable<double> payAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var payDateParameter = payDate != null ?
                new ObjectParameter("payDate", payDate) :
                new ObjectParameter("payDate", typeof(string));
    
            var payAmountParameter = payAmount.HasValue ?
                new ObjectParameter("payAmount", payAmount) :
                new ObjectParameter("payAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_additionalPay", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, payDateParameter, payAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_advPay(string transactionNo, Nullable<int> empID, string empNo, string fullName, string advDate, Nullable<double> advAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var advDateParameter = advDate != null ?
                new ObjectParameter("advDate", advDate) :
                new ObjectParameter("advDate", typeof(string));
    
            var advAmountParameter = advAmount.HasValue ?
                new ObjectParameter("advAmount", advAmount) :
                new ObjectParameter("advAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_advPay", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, advDateParameter, advAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_checkworkday(string transactionNo, Nullable<int> monthCal, Nullable<int> yearCal, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("yearCal", yearCal) :
                new ObjectParameter("yearCal", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_checkworkday", transactionNoParameter, monthCalParameter, yearCalParameter, userIDParameter);
        }
    
        public virtual int p_i_fhfPay(string transactionNo, Nullable<int> empID, string empNo, string fullName, string fhfDate, Nullable<double> fhfDeductAmount, Nullable<double> fhfPayAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var fhfDateParameter = fhfDate != null ?
                new ObjectParameter("fhfDate", fhfDate) :
                new ObjectParameter("fhfDate", typeof(string));
    
            var fhfDeductAmountParameter = fhfDeductAmount.HasValue ?
                new ObjectParameter("fhfDeductAmount", fhfDeductAmount) :
                new ObjectParameter("fhfDeductAmount", typeof(double));
    
            var fhfPayAmountParameter = fhfPayAmount.HasValue ?
                new ObjectParameter("fhfPayAmount", fhfPayAmount) :
                new ObjectParameter("fhfPayAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_fhfPay", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, fhfDateParameter, fhfDeductAmountParameter, fhfPayAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_finger(string transactionNo, Nullable<int> empID, string empNo, string fullName, string statusText, string workday, string wdName, string shift1_timeIn, string shift1_timOut, Nullable<double> shift1_wd, string shift2_timeIn, string shift2_timOut, Nullable<double> shift2_wd, Nullable<double> total_wd, Nullable<double> total_wh, Nullable<double> total_oth, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var statusTextParameter = statusText != null ?
                new ObjectParameter("statusText", statusText) :
                new ObjectParameter("statusText", typeof(string));
    
            var workdayParameter = workday != null ?
                new ObjectParameter("workday", workday) :
                new ObjectParameter("workday", typeof(string));
    
            var wdNameParameter = wdName != null ?
                new ObjectParameter("wdName", wdName) :
                new ObjectParameter("wdName", typeof(string));
    
            var shift1_timeInParameter = shift1_timeIn != null ?
                new ObjectParameter("shift1_timeIn", shift1_timeIn) :
                new ObjectParameter("shift1_timeIn", typeof(string));
    
            var shift1_timOutParameter = shift1_timOut != null ?
                new ObjectParameter("shift1_timOut", shift1_timOut) :
                new ObjectParameter("shift1_timOut", typeof(string));
    
            var shift1_wdParameter = shift1_wd.HasValue ?
                new ObjectParameter("shift1_wd", shift1_wd) :
                new ObjectParameter("shift1_wd", typeof(double));
    
            var shift2_timeInParameter = shift2_timeIn != null ?
                new ObjectParameter("shift2_timeIn", shift2_timeIn) :
                new ObjectParameter("shift2_timeIn", typeof(string));
    
            var shift2_timOutParameter = shift2_timOut != null ?
                new ObjectParameter("shift2_timOut", shift2_timOut) :
                new ObjectParameter("shift2_timOut", typeof(string));
    
            var shift2_wdParameter = shift2_wd.HasValue ?
                new ObjectParameter("shift2_wd", shift2_wd) :
                new ObjectParameter("shift2_wd", typeof(double));
    
            var total_wdParameter = total_wd.HasValue ?
                new ObjectParameter("total_wd", total_wd) :
                new ObjectParameter("total_wd", typeof(double));
    
            var total_whParameter = total_wh.HasValue ?
                new ObjectParameter("total_wh", total_wh) :
                new ObjectParameter("total_wh", typeof(double));
    
            var total_othParameter = total_oth.HasValue ?
                new ObjectParameter("total_oth", total_oth) :
                new ObjectParameter("total_oth", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_finger", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, statusTextParameter, workdayParameter, wdNameParameter, shift1_timeInParameter, shift1_timOutParameter, shift1_wdParameter, shift2_timeInParameter, shift2_timOutParameter, shift2_wdParameter, total_wdParameter, total_whParameter, total_othParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_incentive(string transactionNo, string proName, Nullable<int> empID, string empNo, string fullName, string incentiveMonth, Nullable<double> totalIncentive, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var proNameParameter = proName != null ?
                new ObjectParameter("proName", proName) :
                new ObjectParameter("proName", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var incentiveMonthParameter = incentiveMonth != null ?
                new ObjectParameter("incentiveMonth", incentiveMonth) :
                new ObjectParameter("incentiveMonth", typeof(string));
    
            var totalIncentiveParameter = totalIncentive.HasValue ?
                new ObjectParameter("totalIncentive", totalIncentive) :
                new ObjectParameter("totalIncentive", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_incentive", transactionNoParameter, proNameParameter, empIDParameter, empNoParameter, fullNameParameter, incentiveMonthParameter, totalIncentiveParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_shiftwork(Nullable<int> shiftWorkingID, string shiftName, Nullable<bool> mo, Nullable<System.TimeSpan> mo_timeIn, Nullable<System.TimeSpan> mo_timeOut, Nullable<bool> tu, Nullable<System.TimeSpan> tu_timeIn, Nullable<System.TimeSpan> tu_timeOut, Nullable<bool> we, Nullable<System.TimeSpan> we_timeIn, Nullable<System.TimeSpan> we_timeOut, Nullable<bool> th, Nullable<System.TimeSpan> th_timeIn, Nullable<System.TimeSpan> th_timeOut, Nullable<bool> fr, Nullable<System.TimeSpan> fr_timeIn, Nullable<System.TimeSpan> fr_timeOut, Nullable<bool> sa, Nullable<System.TimeSpan> sa_timeIn, Nullable<System.TimeSpan> sa_timeOut, Nullable<bool> su, Nullable<System.TimeSpan> su_timeIn, Nullable<System.TimeSpan> su_timeOut, Nullable<int> userID, Nullable<int> dayAverage, Nullable<int> insert)
        {
            var shiftWorkingIDParameter = shiftWorkingID.HasValue ?
                new ObjectParameter("shiftWorkingID", shiftWorkingID) :
                new ObjectParameter("shiftWorkingID", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("shiftName", shiftName) :
                new ObjectParameter("shiftName", typeof(string));
    
            var moParameter = mo.HasValue ?
                new ObjectParameter("mo", mo) :
                new ObjectParameter("mo", typeof(bool));
    
            var mo_timeInParameter = mo_timeIn.HasValue ?
                new ObjectParameter("mo_timeIn", mo_timeIn) :
                new ObjectParameter("mo_timeIn", typeof(System.TimeSpan));
    
            var mo_timeOutParameter = mo_timeOut.HasValue ?
                new ObjectParameter("mo_timeOut", mo_timeOut) :
                new ObjectParameter("mo_timeOut", typeof(System.TimeSpan));
    
            var tuParameter = tu.HasValue ?
                new ObjectParameter("tu", tu) :
                new ObjectParameter("tu", typeof(bool));
    
            var tu_timeInParameter = tu_timeIn.HasValue ?
                new ObjectParameter("tu_timeIn", tu_timeIn) :
                new ObjectParameter("tu_timeIn", typeof(System.TimeSpan));
    
            var tu_timeOutParameter = tu_timeOut.HasValue ?
                new ObjectParameter("tu_timeOut", tu_timeOut) :
                new ObjectParameter("tu_timeOut", typeof(System.TimeSpan));
    
            var weParameter = we.HasValue ?
                new ObjectParameter("we", we) :
                new ObjectParameter("we", typeof(bool));
    
            var we_timeInParameter = we_timeIn.HasValue ?
                new ObjectParameter("we_timeIn", we_timeIn) :
                new ObjectParameter("we_timeIn", typeof(System.TimeSpan));
    
            var we_timeOutParameter = we_timeOut.HasValue ?
                new ObjectParameter("we_timeOut", we_timeOut) :
                new ObjectParameter("we_timeOut", typeof(System.TimeSpan));
    
            var thParameter = th.HasValue ?
                new ObjectParameter("th", th) :
                new ObjectParameter("th", typeof(bool));
    
            var th_timeInParameter = th_timeIn.HasValue ?
                new ObjectParameter("th_timeIn", th_timeIn) :
                new ObjectParameter("th_timeIn", typeof(System.TimeSpan));
    
            var th_timeOutParameter = th_timeOut.HasValue ?
                new ObjectParameter("th_timeOut", th_timeOut) :
                new ObjectParameter("th_timeOut", typeof(System.TimeSpan));
    
            var frParameter = fr.HasValue ?
                new ObjectParameter("fr", fr) :
                new ObjectParameter("fr", typeof(bool));
    
            var fr_timeInParameter = fr_timeIn.HasValue ?
                new ObjectParameter("fr_timeIn", fr_timeIn) :
                new ObjectParameter("fr_timeIn", typeof(System.TimeSpan));
    
            var fr_timeOutParameter = fr_timeOut.HasValue ?
                new ObjectParameter("fr_timeOut", fr_timeOut) :
                new ObjectParameter("fr_timeOut", typeof(System.TimeSpan));
    
            var saParameter = sa.HasValue ?
                new ObjectParameter("sa", sa) :
                new ObjectParameter("sa", typeof(bool));
    
            var sa_timeInParameter = sa_timeIn.HasValue ?
                new ObjectParameter("sa_timeIn", sa_timeIn) :
                new ObjectParameter("sa_timeIn", typeof(System.TimeSpan));
    
            var sa_timeOutParameter = sa_timeOut.HasValue ?
                new ObjectParameter("sa_timeOut", sa_timeOut) :
                new ObjectParameter("sa_timeOut", typeof(System.TimeSpan));
    
            var suParameter = su.HasValue ?
                new ObjectParameter("su", su) :
                new ObjectParameter("su", typeof(bool));
    
            var su_timeInParameter = su_timeIn.HasValue ?
                new ObjectParameter("su_timeIn", su_timeIn) :
                new ObjectParameter("su_timeIn", typeof(System.TimeSpan));
    
            var su_timeOutParameter = su_timeOut.HasValue ?
                new ObjectParameter("su_timeOut", su_timeOut) :
                new ObjectParameter("su_timeOut", typeof(System.TimeSpan));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var dayAverageParameter = dayAverage.HasValue ?
                new ObjectParameter("dayAverage", dayAverage) :
                new ObjectParameter("dayAverage", typeof(int));
    
            var insertParameter = insert.HasValue ?
                new ObjectParameter("insert", insert) :
                new ObjectParameter("insert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_shiftwork", shiftWorkingIDParameter, shiftNameParameter, moParameter, mo_timeInParameter, mo_timeOutParameter, tuParameter, tu_timeInParameter, tu_timeOutParameter, weParameter, we_timeInParameter, we_timeOutParameter, thParameter, th_timeInParameter, th_timeOutParameter, frParameter, fr_timeInParameter, fr_timeOutParameter, saParameter, sa_timeInParameter, sa_timeOutParameter, suParameter, su_timeInParameter, su_timeOutParameter, userIDParameter, dayAverageParameter, insertParameter);
        }
    
        public virtual int p_i_uploadBonus(string transactionNo, Nullable<int> empID, string empNo, string fullName, string bonusDate, Nullable<double> bonusAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var bonusDateParameter = bonusDate != null ?
                new ObjectParameter("bonusDate", bonusDate) :
                new ObjectParameter("bonusDate", typeof(string));
    
            var bonusAmountParameter = bonusAmount.HasValue ?
                new ObjectParameter("bonusAmount", bonusAmount) :
                new ObjectParameter("bonusAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_uploadBonus", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, bonusDateParameter, bonusAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertLeaveRequest(string leaveRequestNo, Nullable<int> emp_id, Nullable<int> leaveTypeID, string leaveDay, Nullable<System.DateTime> startdate, Nullable<System.DateTime> endtDate, Nullable<System.DateTime> returnDate, Nullable<double> amountDay, string noted, Nullable<int> delegateEmpID, string fileAttached, Nullable<int> transactionType, string referAdd, Nullable<int> userAdd, string filePath, string fileTypeName, Nullable<int> from_device, string transactionNo, Nullable<bool> leavemorning, Nullable<bool> leaveafternoon)
        {
            var leaveRequestNoParameter = leaveRequestNo != null ?
                new ObjectParameter("leaveRequestNo", leaveRequestNo) :
                new ObjectParameter("leaveRequestNo", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("leaveTypeID", leaveTypeID) :
                new ObjectParameter("leaveTypeID", typeof(int));
    
            var leaveDayParameter = leaveDay != null ?
                new ObjectParameter("leaveDay", leaveDay) :
                new ObjectParameter("leaveDay", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("returnDate", returnDate) :
                new ObjectParameter("returnDate", typeof(System.DateTime));
    
            var amountDayParameter = amountDay.HasValue ?
                new ObjectParameter("amountDay", amountDay) :
                new ObjectParameter("amountDay", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("transactionType", transactionType) :
                new ObjectParameter("transactionType", typeof(int));
    
            var referAddParameter = referAdd != null ?
                new ObjectParameter("referAdd", referAdd) :
                new ObjectParameter("referAdd", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("filePath", filePath) :
                new ObjectParameter("filePath", typeof(string));
    
            var fileTypeNameParameter = fileTypeName != null ?
                new ObjectParameter("fileTypeName", fileTypeName) :
                new ObjectParameter("fileTypeName", typeof(string));
    
            var from_deviceParameter = from_device.HasValue ?
                new ObjectParameter("from_device", from_device) :
                new ObjectParameter("from_device", typeof(int));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var leavemorningParameter = leavemorning.HasValue ?
                new ObjectParameter("leavemorning", leavemorning) :
                new ObjectParameter("leavemorning", typeof(bool));
    
            var leaveafternoonParameter = leaveafternoon.HasValue ?
                new ObjectParameter("leaveafternoon", leaveafternoon) :
                new ObjectParameter("leaveafternoon", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertLeaveRequest", leaveRequestNoParameter, emp_idParameter, leaveTypeIDParameter, leaveDayParameter, startdateParameter, endtDateParameter, returnDateParameter, amountDayParameter, notedParameter, delegateEmpIDParameter, fileAttachedParameter, transactionTypeParameter, referAddParameter, userAddParameter, filePathParameter, fileTypeNameParameter, from_deviceParameter, transactionNoParameter, leavemorningParameter, leaveafternoonParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertRequestOT(Nullable<int> emp_id, Nullable<System.DateTime> dateOT, Nullable<System.DateTime> endtDate, Nullable<System.TimeSpan> strTime, Nullable<System.TimeSpan> endTime, string noted, string fileAttached, Nullable<int> managerID, Nullable<int> userAdd, Nullable<int> otTypeID)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var dateOTParameter = dateOT.HasValue ?
                new ObjectParameter("dateOT", dateOT) :
                new ObjectParameter("dateOT", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var strTimeParameter = strTime.HasValue ?
                new ObjectParameter("strTime", strTime) :
                new ObjectParameter("strTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.TimeSpan));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("managerID", managerID) :
                new ObjectParameter("managerID", typeof(int));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var otTypeIDParameter = otTypeID.HasValue ?
                new ObjectParameter("otTypeID", otTypeID) :
                new ObjectParameter("otTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertRequestOT", emp_idParameter, dateOTParameter, endtDateParameter, strTimeParameter, endTimeParameter, notedParameter, fileAttachedParameter, managerIDParameter, userAddParameter, otTypeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertRequestOTMobile(Nullable<int> emp_id, Nullable<System.DateTime> dateOT, Nullable<System.DateTime> endtDate, Nullable<System.TimeSpan> strTime, Nullable<System.TimeSpan> endTime, string noted, string fileAttached, Nullable<int> managerID, Nullable<int> userAdd, Nullable<int> otTypeID)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var dateOTParameter = dateOT.HasValue ?
                new ObjectParameter("dateOT", dateOT) :
                new ObjectParameter("dateOT", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var strTimeParameter = strTime.HasValue ?
                new ObjectParameter("strTime", strTime) :
                new ObjectParameter("strTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.TimeSpan));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("managerID", managerID) :
                new ObjectParameter("managerID", typeof(int));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var otTypeIDParameter = otTypeID.HasValue ?
                new ObjectParameter("otTypeID", otTypeID) :
                new ObjectParameter("otTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertRequestOTMobile", emp_idParameter, dateOTParameter, endtDateParameter, strTimeParameter, endTimeParameter, notedParameter, fileAttachedParameter, managerIDParameter, userAddParameter, otTypeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_iu_loan(Nullable<int> loanID, Nullable<int> empID, Nullable<double> amountLoan, Nullable<int> loanMonth, Nullable<System.DateTime> requestDate, Nullable<double> loanPercent, Nullable<double> totalLoan, Nullable<System.DateTime> loanStart, Nullable<System.DateTime> loanEnd, string loanReason, string loanFile, Nullable<int> user_add, Nullable<double> loan_incen, Nullable<double> monthlyAmount)
        {
            var loanIDParameter = loanID.HasValue ?
                new ObjectParameter("loanID", loanID) :
                new ObjectParameter("loanID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var amountLoanParameter = amountLoan.HasValue ?
                new ObjectParameter("amountLoan", amountLoan) :
                new ObjectParameter("amountLoan", typeof(double));
    
            var loanMonthParameter = loanMonth.HasValue ?
                new ObjectParameter("loanMonth", loanMonth) :
                new ObjectParameter("loanMonth", typeof(int));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("requestDate", requestDate) :
                new ObjectParameter("requestDate", typeof(System.DateTime));
    
            var loanPercentParameter = loanPercent.HasValue ?
                new ObjectParameter("loanPercent", loanPercent) :
                new ObjectParameter("loanPercent", typeof(double));
    
            var totalLoanParameter = totalLoan.HasValue ?
                new ObjectParameter("totalLoan", totalLoan) :
                new ObjectParameter("totalLoan", typeof(double));
    
            var loanStartParameter = loanStart.HasValue ?
                new ObjectParameter("loanStart", loanStart) :
                new ObjectParameter("loanStart", typeof(System.DateTime));
    
            var loanEndParameter = loanEnd.HasValue ?
                new ObjectParameter("loanEnd", loanEnd) :
                new ObjectParameter("loanEnd", typeof(System.DateTime));
    
            var loanReasonParameter = loanReason != null ?
                new ObjectParameter("LoanReason", loanReason) :
                new ObjectParameter("LoanReason", typeof(string));
    
            var loanFileParameter = loanFile != null ?
                new ObjectParameter("loanFile", loanFile) :
                new ObjectParameter("loanFile", typeof(string));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            var loan_incenParameter = loan_incen.HasValue ?
                new ObjectParameter("loan_incen", loan_incen) :
                new ObjectParameter("loan_incen", typeof(double));
    
            var monthlyAmountParameter = monthlyAmount.HasValue ?
                new ObjectParameter("monthlyAmount", monthlyAmount) :
                new ObjectParameter("monthlyAmount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_iu_loan", loanIDParameter, empIDParameter, amountLoanParameter, loanMonthParameter, requestDateParameter, loanPercentParameter, totalLoanParameter, loanStartParameter, loanEndParameter, loanReasonParameter, loanFileParameter, user_addParameter, loan_incenParameter, monthlyAmountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_iu_sldrtloan(Nullable<int> sLDRT_loanID, Nullable<int> empID, Nullable<double> amountLoan, Nullable<int> loanMonth, Nullable<System.DateTime> requestDate, Nullable<double> loanPercent, Nullable<double> totalLoan, Nullable<System.DateTime> loanStart, Nullable<System.DateTime> loanEnd, string loanReason, string loanFile, Nullable<int> user_add, Nullable<double> loan_incen, Nullable<double> monthlyAmount)
        {
            var sLDRT_loanIDParameter = sLDRT_loanID.HasValue ?
                new ObjectParameter("SLDRT_loanID", sLDRT_loanID) :
                new ObjectParameter("SLDRT_loanID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var amountLoanParameter = amountLoan.HasValue ?
                new ObjectParameter("amountLoan", amountLoan) :
                new ObjectParameter("amountLoan", typeof(double));
    
            var loanMonthParameter = loanMonth.HasValue ?
                new ObjectParameter("loanMonth", loanMonth) :
                new ObjectParameter("loanMonth", typeof(int));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("requestDate", requestDate) :
                new ObjectParameter("requestDate", typeof(System.DateTime));
    
            var loanPercentParameter = loanPercent.HasValue ?
                new ObjectParameter("loanPercent", loanPercent) :
                new ObjectParameter("loanPercent", typeof(double));
    
            var totalLoanParameter = totalLoan.HasValue ?
                new ObjectParameter("totalLoan", totalLoan) :
                new ObjectParameter("totalLoan", typeof(double));
    
            var loanStartParameter = loanStart.HasValue ?
                new ObjectParameter("loanStart", loanStart) :
                new ObjectParameter("loanStart", typeof(System.DateTime));
    
            var loanEndParameter = loanEnd.HasValue ?
                new ObjectParameter("loanEnd", loanEnd) :
                new ObjectParameter("loanEnd", typeof(System.DateTime));
    
            var loanReasonParameter = loanReason != null ?
                new ObjectParameter("LoanReason", loanReason) :
                new ObjectParameter("LoanReason", typeof(string));
    
            var loanFileParameter = loanFile != null ?
                new ObjectParameter("loanFile", loanFile) :
                new ObjectParameter("loanFile", typeof(string));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            var loan_incenParameter = loan_incen.HasValue ?
                new ObjectParameter("loan_incen", loan_incen) :
                new ObjectParameter("loan_incen", typeof(double));
    
            var monthlyAmountParameter = monthlyAmount.HasValue ?
                new ObjectParameter("monthlyAmount", monthlyAmount) :
                new ObjectParameter("monthlyAmount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_iu_sldrtloan", sLDRT_loanIDParameter, empIDParameter, amountLoanParameter, loanMonthParameter, requestDateParameter, loanPercentParameter, totalLoanParameter, loanStartParameter, loanEndParameter, loanReasonParameter, loanFileParameter, user_addParameter, loan_incenParameter, monthlyAmountParameter);
        }
    
        public virtual int p_new_upload(Nullable<int> userID, Nullable<int> uploadTypeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var uploadTypeIDParameter = uploadTypeID.HasValue ?
                new ObjectParameter("uploadTypeID", uploadTypeID) :
                new ObjectParameter("uploadTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_new_upload", userIDParameter, uploadTypeIDParameter);
        }
    
        public virtual int p_noti(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_noti", emp_idParameter);
        }
    
        public virtual int p_payment_Cal_TA(Nullable<int> userID, string ipaddress, Nullable<int> monthCal, Nullable<int> yearCal, string salary_transactionNo, Nullable<System.DateTime> cal_strDate, Nullable<System.DateTime> cal_endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            var salary_transactionNoParameter = salary_transactionNo != null ?
                new ObjectParameter("salary_transactionNo", salary_transactionNo) :
                new ObjectParameter("salary_transactionNo", typeof(string));
    
            var cal_strDateParameter = cal_strDate.HasValue ?
                new ObjectParameter("cal_strDate", cal_strDate) :
                new ObjectParameter("cal_strDate", typeof(System.DateTime));
    
            var cal_endDateParameter = cal_endDate.HasValue ?
                new ObjectParameter("cal_endDate", cal_endDate) :
                new ObjectParameter("cal_endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_payment_Cal_TA", userIDParameter, ipaddressParameter, monthCalParameter, yearCalParameter, salary_transactionNoParameter, cal_strDateParameter, cal_endDateParameter);
        }
    
        public virtual int p_payment_Cal_TA_old(Nullable<int> userID, string ipaddress, Nullable<int> monthCal, Nullable<int> yearCal)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_payment_Cal_TA_old", userIDParameter, ipaddressParameter, monthCalParameter, yearCalParameter);
        }
    
        public virtual ObjectResult<p_Payslip_Result> p_Payslip(string yearmonth, Nullable<int> empid, string startdate, string enddate)
        {
            var yearmonthParameter = yearmonth != null ?
                new ObjectParameter("yearmonth", yearmonth) :
                new ObjectParameter("yearmonth", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Payslip_Result>("p_Payslip", yearmonthParameter, empidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<p_reportOTdetails_Result> p_reportOTdetails(string startdate, string enddate, Nullable<int> companyid, Nullable<int> deptid, Nullable<int> empid)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_reportOTdetails_Result>("p_reportOTdetails", startdateParameter, enddateParameter, companyidParameter, deptidParameter, empidParameter);
        }
    
        public virtual int p_RequestLeave_TA(Nullable<int> empId, Nullable<int> leaveTypeID, Nullable<int> amountDay, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.DateTime> returndate, string noted, Nullable<int> userAdd, string leaveDay, Nullable<int> delegateEmpID)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("leaveTypeID", leaveTypeID) :
                new ObjectParameter("leaveTypeID", typeof(int));
    
            var amountDayParameter = amountDay.HasValue ?
                new ObjectParameter("amountDay", amountDay) :
                new ObjectParameter("amountDay", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var returndateParameter = returndate.HasValue ?
                new ObjectParameter("returndate", returndate) :
                new ObjectParameter("returndate", typeof(System.DateTime));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var leaveDayParameter = leaveDay != null ?
                new ObjectParameter("leaveDay", leaveDay) :
                new ObjectParameter("leaveDay", typeof(string));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_RequestLeave_TA", empIdParameter, leaveTypeIDParameter, amountDayParameter, startdateParameter, enddateParameter, returndateParameter, notedParameter, userAddParameter, leaveDayParameter, delegateEmpIDParameter);
        }
    
        public virtual int p_RequestOT_TA(Nullable<int> emp_id, Nullable<System.DateTime> dateOT, Nullable<System.TimeSpan> strTime, Nullable<System.TimeSpan> endTime, string otTitle, string otDescription, Nullable<int> userAdd, Nullable<int> otTypeID)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var dateOTParameter = dateOT.HasValue ?
                new ObjectParameter("dateOT", dateOT) :
                new ObjectParameter("dateOT", typeof(System.DateTime));
    
            var strTimeParameter = strTime.HasValue ?
                new ObjectParameter("strTime", strTime) :
                new ObjectParameter("strTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.TimeSpan));
    
            var otTitleParameter = otTitle != null ?
                new ObjectParameter("otTitle", otTitle) :
                new ObjectParameter("otTitle", typeof(string));
    
            var otDescriptionParameter = otDescription != null ?
                new ObjectParameter("otDescription", otDescription) :
                new ObjectParameter("otDescription", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var otTypeIDParameter = otTypeID.HasValue ?
                new ObjectParameter("otTypeID", otTypeID) :
                new ObjectParameter("otTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_RequestOT_TA", emp_idParameter, dateOTParameter, strTimeParameter, endTimeParameter, otTitleParameter, otDescriptionParameter, userAddParameter, otTypeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_s_emp_mgr(Nullable<int> userID, Nullable<int> lang)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var langParameter = lang.HasValue ?
                new ObjectParameter("lang", lang) :
                new ObjectParameter("lang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_s_emp_mgr", userIDParameter, langParameter);
        }
    
        public virtual ObjectResult<p_s_uploadFiger_Result> p_s_uploadFiger(Nullable<int> transaction)
        {
            var transactionParameter = transaction.HasValue ?
                new ObjectParameter("transaction", transaction) :
                new ObjectParameter("transaction", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_s_uploadFiger_Result>("p_s_uploadFiger", transactionParameter);
        }
    
        public virtual int p_save_upload(Nullable<int> userID, string transactionNo, Nullable<int> uploadTypeID, string setDate, Nullable<int> salaryID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var uploadTypeIDParameter = uploadTypeID.HasValue ?
                new ObjectParameter("uploadTypeID", uploadTypeID) :
                new ObjectParameter("uploadTypeID", typeof(int));
    
            var setDateParameter = setDate != null ?
                new ObjectParameter("SetDate", setDate) :
                new ObjectParameter("SetDate", typeof(string));
    
            var salaryIDParameter = salaryID.HasValue ?
                new ObjectParameter("salaryID", salaryID) :
                new ObjectParameter("salaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_save_upload", userIDParameter, transactionNoParameter, uploadTypeIDParameter, setDateParameter, salaryIDParameter);
        }
    
        public virtual ObjectResult<p_select_emp_unit_dept_Result> p_select_emp_unit_dept(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_select_emp_unit_dept_Result>("p_select_emp_unit_dept", deptIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_test");
        }
    
        public virtual int p_tmp_pass(string username, Nullable<int> pass_hit)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pass_hitParameter = pass_hit.HasValue ?
                new ObjectParameter("pass_hit", pass_hit) :
                new ObjectParameter("pass_hit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tmp_pass", usernameParameter, pass_hitParameter);
        }
    
        public virtual int p_updateEMPINFO(Nullable<int> empID, Nullable<int> userID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateEMPINFO", empIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_UpdateLeaveRequest(Nullable<int> leaveRequestID, string leaveRequestNo, Nullable<int> emp_id, Nullable<int> leaveTypeID, string leaveDay, Nullable<System.DateTime> startdate, Nullable<System.DateTime> endtDate, Nullable<System.DateTime> returnDate, Nullable<int> amountDay, string noted, Nullable<int> delegateEmpID, string fileAttached, Nullable<int> managerID, Nullable<int> transactionType, Nullable<System.DateTime> expDate, string referAdd, Nullable<int> userAdd)
        {
            var leaveRequestIDParameter = leaveRequestID.HasValue ?
                new ObjectParameter("leaveRequestID", leaveRequestID) :
                new ObjectParameter("leaveRequestID", typeof(int));
    
            var leaveRequestNoParameter = leaveRequestNo != null ?
                new ObjectParameter("leaveRequestNo", leaveRequestNo) :
                new ObjectParameter("leaveRequestNo", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("leaveTypeID", leaveTypeID) :
                new ObjectParameter("leaveTypeID", typeof(int));
    
            var leaveDayParameter = leaveDay != null ?
                new ObjectParameter("leaveDay", leaveDay) :
                new ObjectParameter("leaveDay", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("returnDate", returnDate) :
                new ObjectParameter("returnDate", typeof(System.DateTime));
    
            var amountDayParameter = amountDay.HasValue ?
                new ObjectParameter("amountDay", amountDay) :
                new ObjectParameter("amountDay", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("managerID", managerID) :
                new ObjectParameter("managerID", typeof(int));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("transactionType", transactionType) :
                new ObjectParameter("transactionType", typeof(int));
    
            var expDateParameter = expDate.HasValue ?
                new ObjectParameter("expDate", expDate) :
                new ObjectParameter("expDate", typeof(System.DateTime));
    
            var referAddParameter = referAdd != null ?
                new ObjectParameter("referAdd", referAdd) :
                new ObjectParameter("referAdd", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_UpdateLeaveRequest", leaveRequestIDParameter, leaveRequestNoParameter, emp_idParameter, leaveTypeIDParameter, leaveDayParameter, startdateParameter, endtDateParameter, returnDateParameter, amountDayParameter, notedParameter, delegateEmpIDParameter, fileAttachedParameter, managerIDParameter, transactionTypeParameter, expDateParameter, referAddParameter, userAddParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int p_payment_Cal_Terminate_TA(Nullable<int> userID, string ipaddress, Nullable<int> monthCal, Nullable<int> yearCal)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_payment_Cal_Terminate_TA", userIDParameter, ipaddressParameter, monthCalParameter, yearCalParameter);
        }
    
        public virtual ObjectResult<p_iBankbySum_Result> p_iBankbySum(string yearmonth)
        {
            var yearmonthParameter = yearmonth != null ?
                new ObjectParameter("yearmonth", yearmonth) :
                new ObjectParameter("yearmonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_iBankbySum_Result>("p_iBankbySum", yearmonthParameter);
        }
    
        public virtual ObjectResult<p_reportLeaveSummary_Result> p_reportLeaveSummary(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_reportLeaveSummary_Result>("p_reportLeaveSummary", empIDParameter);
        }
    
        public virtual int p_i_finger_sum(string transactionNo, string workday, Nullable<int> empID, string empNo, string fullName, string cost_center, Nullable<double> shift1_wd, Nullable<double> shift2_wd, Nullable<double> shift3_wd, Nullable<double> actual_wd, Nullable<double> wd_in_month, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var workdayParameter = workday != null ?
                new ObjectParameter("workday", workday) :
                new ObjectParameter("workday", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var cost_centerParameter = cost_center != null ?
                new ObjectParameter("cost_center", cost_center) :
                new ObjectParameter("cost_center", typeof(string));
    
            var shift1_wdParameter = shift1_wd.HasValue ?
                new ObjectParameter("shift1_wd", shift1_wd) :
                new ObjectParameter("shift1_wd", typeof(double));
    
            var shift2_wdParameter = shift2_wd.HasValue ?
                new ObjectParameter("shift2_wd", shift2_wd) :
                new ObjectParameter("shift2_wd", typeof(double));
    
            var shift3_wdParameter = shift3_wd.HasValue ?
                new ObjectParameter("shift3_wd", shift3_wd) :
                new ObjectParameter("shift3_wd", typeof(double));
    
            var actual_wdParameter = actual_wd.HasValue ?
                new ObjectParameter("actual_wd", actual_wd) :
                new ObjectParameter("actual_wd", typeof(double));
    
            var wd_in_monthParameter = wd_in_month.HasValue ?
                new ObjectParameter("wd_in_month", wd_in_month) :
                new ObjectParameter("wd_in_month", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_finger_sum", transactionNoParameter, workdayParameter, empIDParameter, empNoParameter, fullNameParameter, cost_centerParameter, shift1_wdParameter, shift2_wdParameter, shift3_wdParameter, actual_wdParameter, wd_in_monthParameter, notedParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_del_salary_TA(Nullable<int> userID, Nullable<int> salaryID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var salaryIDParameter = salaryID.HasValue ?
                new ObjectParameter("salaryID", salaryID) :
                new ObjectParameter("salaryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_del_salary_TA", userIDParameter, salaryIDParameter);
        }
    
        public virtual int p_salary_Cal_TA(Nullable<int> userID, Nullable<int> monthCal, Nullable<int> yearCal, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_salary_Cal_TA", userIDParameter, monthCalParameter, yearCalParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertDelegate(Nullable<int> empID, Nullable<int> delegateEmpID, string noted, Nullable<System.DateTime> strDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> reCallDate, Nullable<int> user_add)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var strDateParameter = strDate.HasValue ?
                new ObjectParameter("strDate", strDate) :
                new ObjectParameter("strDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var reCallDateParameter = reCallDate.HasValue ?
                new ObjectParameter("reCallDate", reCallDate) :
                new ObjectParameter("reCallDate", typeof(System.DateTime));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertDelegate", empIDParameter, delegateEmpIDParameter, notedParameter, strDateParameter, endDateParameter, reCallDateParameter, user_addParameter);
        }
    
        public virtual int p_tmp_pass1(string username, string pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_tmp_pass1", usernameParameter, passParameter);
        }
    
        public virtual ObjectResult<p_reportLeaveSummary_new_ta_Result> p_reportLeaveSummary_new_ta(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_reportLeaveSummary_new_ta_Result>("p_reportLeaveSummary_new_ta", empIDParameter);
        }
    
        public virtual int p_viewLeaveBalance(Nullable<int> viewYear, Nullable<int> user_view, string ip_view, string transactionView)
        {
            var viewYearParameter = viewYear.HasValue ?
                new ObjectParameter("viewYear", viewYear) :
                new ObjectParameter("viewYear", typeof(int));
    
            var user_viewParameter = user_view.HasValue ?
                new ObjectParameter("user_view", user_view) :
                new ObjectParameter("user_view", typeof(int));
    
            var ip_viewParameter = ip_view != null ?
                new ObjectParameter("ip_view", ip_view) :
                new ObjectParameter("ip_view", typeof(string));
    
            var transactionViewParameter = transactionView != null ?
                new ObjectParameter("transactionView", transactionView) :
                new ObjectParameter("transactionView", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_viewLeaveBalance", viewYearParameter, user_viewParameter, ip_viewParameter, transactionViewParameter);
        }
    
        public virtual int p_adjustLeave(Nullable<int> empid, Nullable<int> adjust_sl, Nullable<int> adjust_al, Nullable<int> adjust_cl, Nullable<int> adjust_dil, string noted, string leaveRequestNo, Nullable<int> userAdd)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var adjust_slParameter = adjust_sl.HasValue ?
                new ObjectParameter("adjust_sl", adjust_sl) :
                new ObjectParameter("adjust_sl", typeof(int));
    
            var adjust_alParameter = adjust_al.HasValue ?
                new ObjectParameter("adjust_al", adjust_al) :
                new ObjectParameter("adjust_al", typeof(int));
    
            var adjust_clParameter = adjust_cl.HasValue ?
                new ObjectParameter("adjust_cl", adjust_cl) :
                new ObjectParameter("adjust_cl", typeof(int));
    
            var adjust_dilParameter = adjust_dil.HasValue ?
                new ObjectParameter("adjust_dil", adjust_dil) :
                new ObjectParameter("adjust_dil", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var leaveRequestNoParameter = leaveRequestNo != null ?
                new ObjectParameter("leaveRequestNo", leaveRequestNo) :
                new ObjectParameter("leaveRequestNo", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_adjustLeave", empidParameter, adjust_slParameter, adjust_alParameter, adjust_clParameter, adjust_dilParameter, notedParameter, leaveRequestNoParameter, userAddParameter);
        }
    
        public virtual int p_set_lang(Nullable<int> userID, Nullable<int> langID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("langID", langID) :
                new ObjectParameter("langID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_set_lang", userIDParameter, langIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertLeaveRequestCopy(string leaveRequestNo, Nullable<int> emp_id, Nullable<int> leaveTypeID, string leaveDay, Nullable<System.DateTime> startdate, Nullable<System.DateTime> endtDate, Nullable<System.DateTime> returnDate, Nullable<double> amountDay, string noted, Nullable<int> delegateEmpID, string fileAttached, Nullable<int> transactionType, string referAdd, Nullable<int> userAdd, string filePath, string fileTypeName, Nullable<int> from_device, string transactionNo)
        {
            var leaveRequestNoParameter = leaveRequestNo != null ?
                new ObjectParameter("leaveRequestNo", leaveRequestNo) :
                new ObjectParameter("leaveRequestNo", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("leaveTypeID", leaveTypeID) :
                new ObjectParameter("leaveTypeID", typeof(int));
    
            var leaveDayParameter = leaveDay != null ?
                new ObjectParameter("leaveDay", leaveDay) :
                new ObjectParameter("leaveDay", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("returnDate", returnDate) :
                new ObjectParameter("returnDate", typeof(System.DateTime));
    
            var amountDayParameter = amountDay.HasValue ?
                new ObjectParameter("amountDay", amountDay) :
                new ObjectParameter("amountDay", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("transactionType", transactionType) :
                new ObjectParameter("transactionType", typeof(int));
    
            var referAddParameter = referAdd != null ?
                new ObjectParameter("referAdd", referAdd) :
                new ObjectParameter("referAdd", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("filePath", filePath) :
                new ObjectParameter("filePath", typeof(string));
    
            var fileTypeNameParameter = fileTypeName != null ?
                new ObjectParameter("fileTypeName", fileTypeName) :
                new ObjectParameter("fileTypeName", typeof(string));
    
            var from_deviceParameter = from_device.HasValue ?
                new ObjectParameter("from_device", from_device) :
                new ObjectParameter("from_device", typeof(int));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertLeaveRequestCopy", leaveRequestNoParameter, emp_idParameter, leaveTypeIDParameter, leaveDayParameter, startdateParameter, endtDateParameter, returnDateParameter, amountDayParameter, notedParameter, delegateEmpIDParameter, fileAttachedParameter, transactionTypeParameter, referAddParameter, userAddParameter, filePathParameter, fileTypeNameParameter, from_deviceParameter, transactionNoParameter);
        }
    
        public virtual int p_approve_salart(Nullable<int> salaryID, Nullable<int> isapprove, string remark, Nullable<int> userID)
        {
            var salaryIDParameter = salaryID.HasValue ?
                new ObjectParameter("salaryID", salaryID) :
                new ObjectParameter("salaryID", typeof(int));
    
            var isapproveParameter = isapprove.HasValue ?
                new ObjectParameter("isapprove", isapprove) :
                new ObjectParameter("isapprove", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_approve_salart", salaryIDParameter, isapproveParameter, remarkParameter, userIDParameter);
        }
    
        public virtual ObjectResult<p_approve_salary_Result> p_approve_salary(Nullable<int> salaryID, Nullable<int> isapprove, string remark, Nullable<int> userID, Nullable<int> approveSalary)
        {
            var salaryIDParameter = salaryID.HasValue ?
                new ObjectParameter("salaryID", salaryID) :
                new ObjectParameter("salaryID", typeof(int));
    
            var isapproveParameter = isapprove.HasValue ?
                new ObjectParameter("isapprove", isapprove) :
                new ObjectParameter("isapprove", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var approveSalaryParameter = approveSalary.HasValue ?
                new ObjectParameter("approveSalary", approveSalary) :
                new ObjectParameter("approveSalary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_approve_salary_Result>("p_approve_salary", salaryIDParameter, isapproveParameter, remarkParameter, userIDParameter, approveSalaryParameter);
        }
    
        public virtual ObjectResult<string> p_rpt1006(Nullable<int> monthCal, Nullable<int> yearCal, Nullable<int> userID)
        {
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("yearCal", yearCal) :
                new ObjectParameter("yearCal", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_rpt1006", monthCalParameter, yearCalParameter, userIDParameter);
        }
    
        public virtual int p_rpt1011(Nullable<int> monthCal, Nullable<int> yearCal, Nullable<int> userID)
        {
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_rpt1011", monthCalParameter, yearCalParameter, userIDParameter);
        }
    
        public virtual ObjectResult<string> p_rpt1012(Nullable<int> monthCal, Nullable<int> yearCal, Nullable<int> userID)
        {
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("YearCal", yearCal) :
                new ObjectParameter("YearCal", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_rpt1012", monthCalParameter, yearCalParameter, userIDParameter);
        }
    
        public virtual int p_insertTB_LeaverequestbyEMPID(string leaveRequestno, Nullable<int> empid, Nullable<int> leavetypeid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.DateTime> returndate, Nullable<double> amountday, string noted, Nullable<System.DateTime> exdate)
        {
            var leaveRequestnoParameter = leaveRequestno != null ?
                new ObjectParameter("leaveRequestno", leaveRequestno) :
                new ObjectParameter("leaveRequestno", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var leavetypeidParameter = leavetypeid.HasValue ?
                new ObjectParameter("leavetypeid", leavetypeid) :
                new ObjectParameter("leavetypeid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var returndateParameter = returndate.HasValue ?
                new ObjectParameter("returndate", returndate) :
                new ObjectParameter("returndate", typeof(System.DateTime));
    
            var amountdayParameter = amountday.HasValue ?
                new ObjectParameter("amountday", amountday) :
                new ObjectParameter("amountday", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var exdateParameter = exdate.HasValue ?
                new ObjectParameter("exdate", exdate) :
                new ObjectParameter("exdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_insertTB_LeaverequestbyEMPID", leaveRequestnoParameter, empidParameter, leavetypeidParameter, startdateParameter, enddateParameter, returndateParameter, amountdayParameter, notedParameter, exdateParameter);
        }
    
        public virtual ObjectResult<string> p_rpt1006_old(Nullable<int> monthCal, Nullable<int> yearCal, Nullable<int> userID)
        {
            var monthCalParameter = monthCal.HasValue ?
                new ObjectParameter("monthCal", monthCal) :
                new ObjectParameter("monthCal", typeof(int));
    
            var yearCalParameter = yearCal.HasValue ?
                new ObjectParameter("yearCal", yearCal) :
                new ObjectParameter("yearCal", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_rpt1006_old", monthCalParameter, yearCalParameter, userIDParameter);
        }
    
        public virtual int p_insertEmployeeLeaveDetail(Nullable<int> leavetypeid, Nullable<int> empid, Nullable<double> amount, Nullable<int> useradd)
        {
            var leavetypeidParameter = leavetypeid.HasValue ?
                new ObjectParameter("leavetypeid", leavetypeid) :
                new ObjectParameter("leavetypeid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var useraddParameter = useradd.HasValue ?
                new ObjectParameter("useradd", useradd) :
                new ObjectParameter("useradd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_insertEmployeeLeaveDetail", leavetypeidParameter, empidParameter, amountParameter, useraddParameter);
        }
    
        public virtual int pd_insertleaverequestdetail(Nullable<int> leaverequestid)
        {
            var leaverequestidParameter = leaverequestid.HasValue ?
                new ObjectParameter("leaverequestid", leaverequestid) :
                new ObjectParameter("leaverequestid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_insertleaverequestdetail", leaverequestidParameter);
        }
    
        public virtual int pd_insertleaverequestdetailRunning()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_insertleaverequestdetailRunning");
        }
    
        public virtual int p_updateEmployeeLeaveDetail(Nullable<int> leaverequestid, Nullable<double> amountday, Nullable<int> useradd)
        {
            var leaverequestidParameter = leaverequestid.HasValue ?
                new ObjectParameter("leaverequestid", leaverequestid) :
                new ObjectParameter("leaverequestid", typeof(int));
    
            var amountdayParameter = amountday.HasValue ?
                new ObjectParameter("amountday", amountday) :
                new ObjectParameter("amountday", typeof(double));
    
            var useraddParameter = useradd.HasValue ?
                new ObjectParameter("useradd", useradd) :
                new ObjectParameter("useradd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateEmployeeLeaveDetail", leaverequestidParameter, amountdayParameter, useraddParameter);
        }
    
        public virtual ObjectResult<p_reportLeaveSummaryAllEmployee_Result> p_reportLeaveSummaryAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_reportLeaveSummaryAllEmployee_Result>("p_reportLeaveSummaryAllEmployee");
        }
    
        public virtual int pd_updatePublicHoliday(Nullable<System.DateTime> publicholiday, string publicholidayName1, string publicholidayName2, Nullable<int> publicholidayid)
        {
            var publicholidayParameter = publicholiday.HasValue ?
                new ObjectParameter("publicholiday", publicholiday) :
                new ObjectParameter("publicholiday", typeof(System.DateTime));
    
            var publicholidayName1Parameter = publicholidayName1 != null ?
                new ObjectParameter("publicholidayName1", publicholidayName1) :
                new ObjectParameter("publicholidayName1", typeof(string));
    
            var publicholidayName2Parameter = publicholidayName2 != null ?
                new ObjectParameter("publicholidayName2", publicholidayName2) :
                new ObjectParameter("publicholidayName2", typeof(string));
    
            var publicholidayidParameter = publicholidayid.HasValue ?
                new ObjectParameter("publicholidayid", publicholidayid) :
                new ObjectParameter("publicholidayid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_updatePublicHoliday", publicholidayParameter, publicholidayName1Parameter, publicholidayName2Parameter, publicholidayidParameter);
        }
    
        public virtual ObjectResult<p_reportLeaveSummaryAllEmployee_new_Result> p_reportLeaveSummaryAllEmployee_new()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_reportLeaveSummaryAllEmployee_new_Result>("p_reportLeaveSummaryAllEmployee_new");
        }
    
        public virtual ObjectResult<pd_displayNotiapprove_Result> pd_displayNotiapprove(Nullable<int> managerid)
        {
            var manageridParameter = managerid.HasValue ?
                new ObjectParameter("managerid", managerid) :
                new ObjectParameter("managerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_displayNotiapprove_Result>("pd_displayNotiapprove", manageridParameter);
        }
    
        public virtual ObjectResult<pd_displayLeaveBalanceAll_Result> pd_displayLeaveBalanceAll(Nullable<int> empid, Nullable<int> year)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_displayLeaveBalanceAll_Result>("pd_displayLeaveBalanceAll", empidParameter, yearParameter);
        }
    
        public virtual int pd_insertTb_log(Nullable<System.DateTime> logdate, string loguser, string logeven, string logmodules, string oldData, string newData)
        {
            var logdateParameter = logdate.HasValue ?
                new ObjectParameter("logdate", logdate) :
                new ObjectParameter("logdate", typeof(System.DateTime));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("loguser", loguser) :
                new ObjectParameter("loguser", typeof(string));
    
            var logevenParameter = logeven != null ?
                new ObjectParameter("logeven", logeven) :
                new ObjectParameter("logeven", typeof(string));
    
            var logmodulesParameter = logmodules != null ?
                new ObjectParameter("logmodules", logmodules) :
                new ObjectParameter("logmodules", typeof(string));
    
            var oldDataParameter = oldData != null ?
                new ObjectParameter("oldData", oldData) :
                new ObjectParameter("oldData", typeof(string));
    
            var newDataParameter = newData != null ?
                new ObjectParameter("newData", newData) :
                new ObjectParameter("newData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_insertTb_log", logdateParameter, loguserParameter, logevenParameter, logmodulesParameter, oldDataParameter, newDataParameter);
        }
    
        public virtual int p_i_personalloan(string transactionNo, Nullable<int> empID, string empNo, string fullName, string deductDate, Nullable<double> deductAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var deductDateParameter = deductDate != null ?
                new ObjectParameter("deductDate", deductDate) :
                new ObjectParameter("deductDate", typeof(string));
    
            var deductAmountParameter = deductAmount.HasValue ?
                new ObjectParameter("deductAmount", deductAmount) :
                new ObjectParameter("deductAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_personalloan", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, deductDateParameter, deductAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual int p_i_sldrtloan(string transactionNo, Nullable<int> empID, string empNo, string fullName, string deductDate, Nullable<double> deductAmount, string noted, Nullable<int> userID)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var deductDateParameter = deductDate != null ?
                new ObjectParameter("deductDate", deductDate) :
                new ObjectParameter("deductDate", typeof(string));
    
            var deductAmountParameter = deductAmount.HasValue ?
                new ObjectParameter("deductAmount", deductAmount) :
                new ObjectParameter("deductAmount", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_i_sldrtloan", transactionNoParameter, empIDParameter, empNoParameter, fullNameParameter, deductDateParameter, deductAmountParameter, notedParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_upload_finger_sum(string transactionNo, Nullable<int> userID, string ipaddress)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("ipaddress", ipaddress) :
                new ObjectParameter("ipaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_upload_finger_sum", transactionNoParameter, userIDParameter, ipaddressParameter);
        }
    
        public virtual ObjectResult<pd_displayNotiapprove1_Result> pd_displayNotiapprove1(Nullable<int> managerid)
        {
            var manageridParameter = managerid.HasValue ?
                new ObjectParameter("managerid", managerid) :
                new ObjectParameter("managerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_displayNotiapprove1_Result>("pd_displayNotiapprove1", manageridParameter);
        }
    
        public virtual ObjectResult<pd_displayLeaveDashboard_Result> pd_displayLeaveDashboard(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_displayLeaveDashboard_Result>("pd_displayLeaveDashboard", empidParameter);
        }
    
        public virtual ObjectResult<p_Payslip1_Result> p_Payslip1(string yearmonth, Nullable<int> empid, string startdate, string enddate)
        {
            var yearmonthParameter = yearmonth != null ?
                new ObjectParameter("yearmonth", yearmonth) :
                new ObjectParameter("yearmonth", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Payslip1_Result>("p_Payslip1", yearmonthParameter, empidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<pd_displayMobileLeaveBalanceDashboard_Result> pd_displayMobileLeaveBalanceDashboard(string year, Nullable<int> empid, Nullable<int> lang)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var langParameter = lang.HasValue ?
                new ObjectParameter("lang", lang) :
                new ObjectParameter("lang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_displayMobileLeaveBalanceDashboard_Result>("pd_displayMobileLeaveBalanceDashboard", yearParameter, empidParameter, langParameter);
        }
    
        public virtual ObjectResult<pd_sumcheckleaveall_Result> pd_sumcheckleaveall(Nullable<int> empid, Nullable<int> leavetypeid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var leavetypeidParameter = leavetypeid.HasValue ?
                new ObjectParameter("leavetypeid", leavetypeid) :
                new ObjectParameter("leavetypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_sumcheckleaveall_Result>("pd_sumcheckleaveall", empidParameter, leavetypeidParameter);
        }
    
        public virtual int p_bonus_summary(string transactionNo, Nullable<int> yearView)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var yearViewParameter = yearView.HasValue ?
                new ObjectParameter("yearView", yearView) :
                new ObjectParameter("yearView", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_bonus_summary", transactionNoParameter, yearViewParameter);
        }
    
        public virtual ObjectResult<pd_sumcheckleaveall1_Result> pd_sumcheckleaveall1(Nullable<int> empid, Nullable<int> leavetypeid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var leavetypeidParameter = leavetypeid.HasValue ?
                new ObjectParameter("leavetypeid", leavetypeid) :
                new ObjectParameter("leavetypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_sumcheckleaveall1_Result>("pd_sumcheckleaveall1", empidParameter, leavetypeidParameter);
        }
    
        public virtual int p_bonus_summary1(string transactionNo, Nullable<int> yearView)
        {
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var yearViewParameter = yearView.HasValue ?
                new ObjectParameter("yearView", yearView) :
                new ObjectParameter("yearView", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_bonus_summary1", transactionNoParameter, yearViewParameter);
        }
    
        public virtual ObjectResult<p_Payslip2_Result> p_Payslip2(string yearmonth, Nullable<int> empid, string startdate, string enddate)
        {
            var yearmonthParameter = yearmonth != null ?
                new ObjectParameter("yearmonth", yearmonth) :
                new ObjectParameter("yearmonth", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Payslip2_Result>("p_Payslip2", yearmonthParameter, empidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<pd_leavebalanceyear_Result> pd_leavebalanceyear(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_leavebalanceyear_Result>("pd_leavebalanceyear", emp_idParameter);
        }
    
        public virtual int pd_updateTb_EmployeesApproveBy(Nullable<int> approveby, Nullable<int> empid)
        {
            var approvebyParameter = approveby.HasValue ?
                new ObjectParameter("approveby", approveby) :
                new ObjectParameter("approveby", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_updateTb_EmployeesApproveBy", approvebyParameter, empidParameter);
        }
    
        public virtual int pd_insertTb_empInfoNew(string empposition, Nullable<int> empid, Nullable<int> unitID, Nullable<int> empLevelID, Nullable<int> empGroupID, Nullable<int> shiftworkingid, Nullable<int> costcenterid, string assigmentlocation, string currentaddress, Nullable<int> mgrid, Nullable<int> workingstatusid, Nullable<int> emptypeid, Nullable<int> taxtypeid, Nullable<int> user_add, Nullable<int> positionid, Nullable<System.DateTime> hiredate)
        {
            var emppositionParameter = empposition != null ?
                new ObjectParameter("empposition", empposition) :
                new ObjectParameter("empposition", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("unitID", unitID) :
                new ObjectParameter("unitID", typeof(int));
    
            var empLevelIDParameter = empLevelID.HasValue ?
                new ObjectParameter("empLevelID", empLevelID) :
                new ObjectParameter("empLevelID", typeof(int));
    
            var empGroupIDParameter = empGroupID.HasValue ?
                new ObjectParameter("empGroupID", empGroupID) :
                new ObjectParameter("empGroupID", typeof(int));
    
            var shiftworkingidParameter = shiftworkingid.HasValue ?
                new ObjectParameter("shiftworkingid", shiftworkingid) :
                new ObjectParameter("shiftworkingid", typeof(int));
    
            var costcenteridParameter = costcenterid.HasValue ?
                new ObjectParameter("costcenterid", costcenterid) :
                new ObjectParameter("costcenterid", typeof(int));
    
            var assigmentlocationParameter = assigmentlocation != null ?
                new ObjectParameter("assigmentlocation", assigmentlocation) :
                new ObjectParameter("assigmentlocation", typeof(string));
    
            var currentaddressParameter = currentaddress != null ?
                new ObjectParameter("currentaddress", currentaddress) :
                new ObjectParameter("currentaddress", typeof(string));
    
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            var workingstatusidParameter = workingstatusid.HasValue ?
                new ObjectParameter("workingstatusid", workingstatusid) :
                new ObjectParameter("workingstatusid", typeof(int));
    
            var emptypeidParameter = emptypeid.HasValue ?
                new ObjectParameter("emptypeid", emptypeid) :
                new ObjectParameter("emptypeid", typeof(int));
    
            var taxtypeidParameter = taxtypeid.HasValue ?
                new ObjectParameter("taxtypeid", taxtypeid) :
                new ObjectParameter("taxtypeid", typeof(int));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            var positionidParameter = positionid.HasValue ?
                new ObjectParameter("positionid", positionid) :
                new ObjectParameter("positionid", typeof(int));
    
            var hiredateParameter = hiredate.HasValue ?
                new ObjectParameter("hiredate", hiredate) :
                new ObjectParameter("hiredate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_insertTb_empInfoNew", emppositionParameter, empidParameter, unitIDParameter, empLevelIDParameter, empGroupIDParameter, shiftworkingidParameter, costcenteridParameter, assigmentlocationParameter, currentaddressParameter, mgridParameter, workingstatusidParameter, emptypeidParameter, taxtypeidParameter, user_addParameter, positionidParameter, hiredateParameter);
        }
    
        public virtual int pd_p_AddUserAdmin(string useremail, Nullable<int> createby)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_AddUserAdmin", useremailParameter, createbyParameter);
        }
    
        public virtual int pd_P_DelEmployee_GroupLevels(Nullable<int> pegeid)
        {
            var pegeidParameter = pegeid.HasValue ?
                new ObjectParameter("pegeid", pegeid) :
                new ObjectParameter("pegeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_DelEmployee_GroupLevels", pegeidParameter);
        }
    
        public virtual int pd_p_delEmployeeHeaderquestion(Nullable<int> ehqid)
        {
            var ehqidParameter = ehqid.HasValue ?
                new ObjectParameter("ehqid", ehqid) :
                new ObjectParameter("ehqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delEmployeeHeaderquestion", ehqidParameter);
        }
    
        public virtual int pd_p_deleteCommentquestionpartbydirector(Nullable<int> cdqid)
        {
            var cdqidParameter = cdqid.HasValue ?
                new ObjectParameter("cdqid", cdqid) :
                new ObjectParameter("cdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_deleteCommentquestionpartbydirector", cdqidParameter);
        }
    
        public virtual int pd_P_DelGroupLevels(Nullable<int> gluid)
        {
            var gluidParameter = gluid.HasValue ?
                new ObjectParameter("gluid", gluid) :
                new ObjectParameter("gluid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_DelGroupLevels", gluidParameter);
        }
    
        public virtual int pd_p_delGroupPermission(Nullable<int> gPEPID)
        {
            var gPEPIDParameter = gPEPID.HasValue ?
                new ObjectParameter("GPEPID", gPEPID) :
                new ObjectParameter("GPEPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delGroupPermission", gPEPIDParameter);
        }
    
        public virtual int pd_p_delHeaderquestion(Nullable<int> hdqid)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delHeaderquestion", hdqidParameter);
        }
    
        public virtual int pd_p_delListquestionemp(Nullable<int> lqtid)
        {
            var lqtidParameter = lqtid.HasValue ?
                new ObjectParameter("lqtid", lqtid) :
                new ObjectParameter("lqtid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delListquestionemp", lqtidParameter);
        }
    
        public virtual int pd_p_dellistquestionempdetailsbyemployee(Nullable<int> lqdid)
        {
            var lqdidParameter = lqdid.HasValue ?
                new ObjectParameter("lqdid", lqdid) :
                new ObjectParameter("lqdid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_dellistquestionempdetailsbyemployee", lqdidParameter);
        }
    
        public virtual int pd_p_delQuestionpart(Nullable<int> qtid)
        {
            var qtidParameter = qtid.HasValue ?
                new ObjectParameter("qtid", qtid) :
                new ObjectParameter("qtid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delQuestionpart", qtidParameter);
        }
    
        public virtual int pd_p_delquestlistdetails(Nullable<int> qtlid)
        {
            var qtlidParameter = qtlid.HasValue ?
                new ObjectParameter("qtlid", qtlid) :
                new ObjectParameter("qtlid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delquestlistdetails", qtlidParameter);
        }
    
        public virtual int pd_p_delscore(Nullable<int> pscid)
        {
            var pscidParameter = pscid.HasValue ?
                new ObjectParameter("pscid", pscid) :
                new ObjectParameter("pscid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_delscore", pscidParameter);
        }
    
        public virtual int pd_p_DelUserAdmin(string useremail)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_DelUserAdmin", useremailParameter);
        }
    
        public virtual int pd_P_DelUserLevels(Nullable<int> pUSLID)
        {
            var pUSLIDParameter = pUSLID.HasValue ?
                new ObjectParameter("PUSLID", pUSLID) :
                new ObjectParameter("PUSLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_DelUserLevels", pUSLIDParameter);
        }
    
        public virtual int pd_p_insertCommentquestionpartbyDirector(Nullable<int> qTID, Nullable<int> commentBy, Nullable<int> commentTo, string textcomment)
        {
            var qTIDParameter = qTID.HasValue ?
                new ObjectParameter("QTID", qTID) :
                new ObjectParameter("QTID", typeof(int));
    
            var commentByParameter = commentBy.HasValue ?
                new ObjectParameter("CommentBy", commentBy) :
                new ObjectParameter("CommentBy", typeof(int));
    
            var commentToParameter = commentTo.HasValue ?
                new ObjectParameter("CommentTo", commentTo) :
                new ObjectParameter("CommentTo", typeof(int));
    
            var textcommentParameter = textcomment != null ?
                new ObjectParameter("Textcomment", textcomment) :
                new ObjectParameter("Textcomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertCommentquestionpartbyDirector", qTIDParameter, commentByParameter, commentToParameter, textcommentParameter);
        }
    
        public virtual int pd_p_insertCommentUpdateIncomeManager(Nullable<int> hdqid, Nullable<int> empid, Nullable<bool> updateincome_percent, Nullable<bool> updateincomeLevels, Nullable<bool> updatePosition, string commentsbymanager, Nullable<int> createby)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var updateincome_percentParameter = updateincome_percent.HasValue ?
                new ObjectParameter("updateincome_percent", updateincome_percent) :
                new ObjectParameter("updateincome_percent", typeof(bool));
    
            var updateincomeLevelsParameter = updateincomeLevels.HasValue ?
                new ObjectParameter("updateincomeLevels", updateincomeLevels) :
                new ObjectParameter("updateincomeLevels", typeof(bool));
    
            var updatePositionParameter = updatePosition.HasValue ?
                new ObjectParameter("updatePosition", updatePosition) :
                new ObjectParameter("updatePosition", typeof(bool));
    
            var commentsbymanagerParameter = commentsbymanager != null ?
                new ObjectParameter("commentsbymanager", commentsbymanager) :
                new ObjectParameter("commentsbymanager", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertCommentUpdateIncomeManager", hdqidParameter, empidParameter, updateincome_percentParameter, updateincomeLevelsParameter, updatePositionParameter, commentsbymanagerParameter, createbyParameter);
        }
    
        public virtual int pd_P_InsertEmployee_GroupLevels(Nullable<int> pUSLID, Nullable<int> gluid, Nullable<int> emp_id, Nullable<int> createby)
        {
            var pUSLIDParameter = pUSLID.HasValue ?
                new ObjectParameter("PUSLID", pUSLID) :
                new ObjectParameter("PUSLID", typeof(int));
    
            var gluidParameter = gluid.HasValue ?
                new ObjectParameter("gluid", gluid) :
                new ObjectParameter("gluid", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_InsertEmployee_GroupLevels", pUSLIDParameter, gluidParameter, emp_idParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertEmployeeHeaderquestion(Nullable<int> pegeid, Nullable<int> hdqid, Nullable<int> createby)
        {
            var pegeidParameter = pegeid.HasValue ?
                new ObjectParameter("pegeid", pegeid) :
                new ObjectParameter("pegeid", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertEmployeeHeaderquestion", pegeidParameter, hdqidParameter, createbyParameter);
        }
    
        public virtual int pd_P_insertGroupLevels(string groupname, Nullable<int> grouplevels, string moreinfo, Nullable<int> createby, Nullable<int> approveby)
        {
            var groupnameParameter = groupname != null ?
                new ObjectParameter("Groupname", groupname) :
                new ObjectParameter("Groupname", typeof(string));
    
            var grouplevelsParameter = grouplevels.HasValue ?
                new ObjectParameter("grouplevels", grouplevels) :
                new ObjectParameter("grouplevels", typeof(int));
    
            var moreinfoParameter = moreinfo != null ?
                new ObjectParameter("moreinfo", moreinfo) :
                new ObjectParameter("moreinfo", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var approvebyParameter = approveby.HasValue ?
                new ObjectParameter("approveby", approveby) :
                new ObjectParameter("approveby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_insertGroupLevels", groupnameParameter, grouplevelsParameter, moreinfoParameter, createbyParameter, approvebyParameter);
        }
    
        public virtual int pd_p_insertGroupPermission(Nullable<int> gLUID, Nullable<int> pMSID, Nullable<int> createby)
        {
            var gLUIDParameter = gLUID.HasValue ?
                new ObjectParameter("GLUID", gLUID) :
                new ObjectParameter("GLUID", typeof(int));
    
            var pMSIDParameter = pMSID.HasValue ?
                new ObjectParameter("PMSID", pMSID) :
                new ObjectParameter("PMSID", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertGroupPermission", gLUIDParameter, pMSIDParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertGroupPermissionLogin(Nullable<int> groupLevels, Nullable<int> pMSID, Nullable<bool> checkbox, Nullable<int> createby)
        {
            var groupLevelsParameter = groupLevels.HasValue ?
                new ObjectParameter("GroupLevels", groupLevels) :
                new ObjectParameter("GroupLevels", typeof(int));
    
            var pMSIDParameter = pMSID.HasValue ?
                new ObjectParameter("PMSID", pMSID) :
                new ObjectParameter("PMSID", typeof(int));
    
            var checkboxParameter = checkbox.HasValue ?
                new ObjectParameter("checkbox", checkbox) :
                new ObjectParameter("checkbox", typeof(bool));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertGroupPermissionLogin", groupLevelsParameter, pMSIDParameter, checkboxParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertheaderquesitongrouplevel(Nullable<int> hdqid, Nullable<int> gluid, Nullable<int> createby)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var gluidParameter = gluid.HasValue ?
                new ObjectParameter("gluid", gluid) :
                new ObjectParameter("gluid", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertheaderquesitongrouplevel", hdqidParameter, gluidParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertHeaderquestionemployeeComments(Nullable<int> emp_id, Nullable<int> commentby, Nullable<int> hdqid, string textcomments, string rectype, Nullable<int> rejectTo)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var commentbyParameter = commentby.HasValue ?
                new ObjectParameter("commentby", commentby) :
                new ObjectParameter("commentby", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var textcommentsParameter = textcomments != null ?
                new ObjectParameter("textcomments", textcomments) :
                new ObjectParameter("textcomments", typeof(string));
    
            var rectypeParameter = rectype != null ?
                new ObjectParameter("rectype", rectype) :
                new ObjectParameter("rectype", typeof(string));
    
            var rejectToParameter = rejectTo.HasValue ?
                new ObjectParameter("rejectTo", rejectTo) :
                new ObjectParameter("rejectTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertHeaderquestionemployeeComments", emp_idParameter, commentbyParameter, hdqidParameter, textcommentsParameter, rectypeParameter, rejectToParameter);
        }
    
        public virtual int pd_p_insertHeaderquestionemployeeScoreSummary(Nullable<int> hdqid, Nullable<int> emp_id, Nullable<int> createby)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertHeaderquestionemployeeScoreSummary", hdqidParameter, emp_idParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertHeadquestion(string headername, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> createby, Nullable<double> kpi_percent, Nullable<double> kbi_percent)
        {
            var headernameParameter = headername != null ?
                new ObjectParameter("headername", headername) :
                new ObjectParameter("headername", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var kpi_percentParameter = kpi_percent.HasValue ?
                new ObjectParameter("kpi_percent", kpi_percent) :
                new ObjectParameter("kpi_percent", typeof(double));
    
            var kbi_percentParameter = kbi_percent.HasValue ?
                new ObjectParameter("kbi_percent", kbi_percent) :
                new ObjectParameter("kbi_percent", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertHeadquestion", headernameParameter, startdateParameter, enddateParameter, createbyParameter, kpi_percentParameter, kbi_percentParameter);
        }
    
        public virtual int pd_p_insertListquestionemp(Nullable<int> hdqid, string questionname, Nullable<int> createby, Nullable<int> qTLID)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("Hdqid", hdqid) :
                new ObjectParameter("Hdqid", typeof(int));
    
            var questionnameParameter = questionname != null ?
                new ObjectParameter("questionname", questionname) :
                new ObjectParameter("questionname", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var qTLIDParameter = qTLID.HasValue ?
                new ObjectParameter("QTLID", qTLID) :
                new ObjectParameter("QTLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertListquestionemp", hdqidParameter, questionnameParameter, createbyParameter, qTLIDParameter);
        }
    
        public virtual int pd_p_insertListquestionempdetails(Nullable<int> qtlid, Nullable<int> emp_id)
        {
            var qtlidParameter = qtlid.HasValue ?
                new ObjectParameter("qtlid", qtlid) :
                new ObjectParameter("qtlid", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertListquestionempdetails", qtlidParameter, emp_idParameter);
        }
    
        public virtual int pd_p_insertlistquestionempdetailsUpdate(Nullable<int> qtlid, Nullable<int> emp_id, Nullable<int> hdqid)
        {
            var qtlidParameter = qtlid.HasValue ?
                new ObjectParameter("qtlid", qtlid) :
                new ObjectParameter("qtlid", typeof(int));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertlistquestionempdetailsUpdate", qtlidParameter, emp_idParameter, hdqidParameter);
        }
    
        public virtual int pd_p_insertquestionpart(Nullable<int> tqid, Nullable<int> questoinpartno, string questionpartname, Nullable<int> createby, Nullable<double> score, Nullable<int> hdqid)
        {
            var tqidParameter = tqid.HasValue ?
                new ObjectParameter("tqid", tqid) :
                new ObjectParameter("tqid", typeof(int));
    
            var questoinpartnoParameter = questoinpartno.HasValue ?
                new ObjectParameter("questoinpartno", questoinpartno) :
                new ObjectParameter("questoinpartno", typeof(int));
    
            var questionpartnameParameter = questionpartname != null ?
                new ObjectParameter("questionpartname", questionpartname) :
                new ObjectParameter("questionpartname", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertquestionpart", tqidParameter, questoinpartnoParameter, questionpartnameParameter, createbyParameter, scoreParameter, hdqidParameter);
        }
    
        public virtual int pd_p_insertquestlistdetails(Nullable<int> hdqid, Nullable<int> qtid, Nullable<int> qno, string qname, Nullable<int> createby, Nullable<double> scores)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var qtidParameter = qtid.HasValue ?
                new ObjectParameter("qtid", qtid) :
                new ObjectParameter("qtid", typeof(int));
    
            var qnoParameter = qno.HasValue ?
                new ObjectParameter("qno", qno) :
                new ObjectParameter("qno", typeof(int));
    
            var qnameParameter = qname != null ?
                new ObjectParameter("qname", qname) :
                new ObjectParameter("qname", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var scoresParameter = scores.HasValue ?
                new ObjectParameter("scores", scores) :
                new ObjectParameter("scores", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertquestlistdetails", hdqidParameter, qtidParameter, qnoParameter, qnameParameter, createbyParameter, scoresParameter);
        }
    
        public virtual int pd_p_insertscore(Nullable<double> score_min, Nullable<double> score_max, string score_grade, string score_info, Nullable<int> createby)
        {
            var score_minParameter = score_min.HasValue ?
                new ObjectParameter("score_min", score_min) :
                new ObjectParameter("score_min", typeof(double));
    
            var score_maxParameter = score_max.HasValue ?
                new ObjectParameter("score_max", score_max) :
                new ObjectParameter("score_max", typeof(double));
    
            var score_gradeParameter = score_grade != null ?
                new ObjectParameter("score_grade", score_grade) :
                new ObjectParameter("score_grade", typeof(string));
    
            var score_infoParameter = score_info != null ?
                new ObjectParameter("score_info", score_info) :
                new ObjectParameter("score_info", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertscore", score_minParameter, score_maxParameter, score_gradeParameter, score_infoParameter, createbyParameter);
        }
    
        public virtual int pd_p_insertTbl_p_listquestionempdetailsbyEmployee(Nullable<int> emp_id, Nullable<double> ownerscore, Nullable<int> hdqid, string employeemoreinfo)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var ownerscoreParameter = ownerscore.HasValue ?
                new ObjectParameter("ownerscore", ownerscore) :
                new ObjectParameter("ownerscore", typeof(double));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var employeemoreinfoParameter = employeemoreinfo != null ?
                new ObjectParameter("employeemoreinfo", employeemoreinfo) :
                new ObjectParameter("employeemoreinfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_insertTbl_p_listquestionempdetailsbyEmployee", emp_idParameter, ownerscoreParameter, hdqidParameter, employeemoreinfoParameter);
        }
    
        public virtual int pd_P_insertUserLevels(string levelsname, Nullable<int> levels, Nullable<int> createby, string moreinfo)
        {
            var levelsnameParameter = levelsname != null ?
                new ObjectParameter("Levelsname", levelsname) :
                new ObjectParameter("Levelsname", typeof(string));
    
            var levelsParameter = levels.HasValue ?
                new ObjectParameter("Levels", levels) :
                new ObjectParameter("Levels", typeof(int));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("Createby", createby) :
                new ObjectParameter("Createby", typeof(int));
    
            var moreinfoParameter = moreinfo != null ?
                new ObjectParameter("moreinfo", moreinfo) :
                new ObjectParameter("moreinfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_insertUserLevels", levelsnameParameter, levelsParameter, createbyParameter, moreinfoParameter);
        }
    
        public virtual int pd_p_reportperformancereview(Nullable<int> hdqid, Nullable<int> empid, string sessionclick)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var sessionclickParameter = sessionclick != null ?
                new ObjectParameter("sessionclick", sessionclick) :
                new ObjectParameter("sessionclick", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_reportperformancereview", hdqidParameter, empidParameter, sessionclickParameter);
        }
    
        public virtual int pd_p_updateCommentUpdateIncomeHR(Nullable<int> cudid, Nullable<int> hrid, string commentsbyHR)
        {
            var cudidParameter = cudid.HasValue ?
                new ObjectParameter("cudid", cudid) :
                new ObjectParameter("cudid", typeof(int));
    
            var hridParameter = hrid.HasValue ?
                new ObjectParameter("hrid", hrid) :
                new ObjectParameter("hrid", typeof(int));
    
            var commentsbyHRParameter = commentsbyHR != null ?
                new ObjectParameter("commentsbyHR", commentsbyHR) :
                new ObjectParameter("commentsbyHR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateCommentUpdateIncomeHR", cudidParameter, hridParameter, commentsbyHRParameter);
        }
    
        public virtual int pd_p_updateFinishedHeaderquestion(Nullable<int> hdqid)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateFinishedHeaderquestion", hdqidParameter);
        }
    
        public virtual int pd_P_updateGroupLevels(string groupname, Nullable<int> grouplevels, string moreinfo, Nullable<int> createby, Nullable<int> approveby, Nullable<int> gLUID)
        {
            var groupnameParameter = groupname != null ?
                new ObjectParameter("Groupname", groupname) :
                new ObjectParameter("Groupname", typeof(string));
    
            var grouplevelsParameter = grouplevels.HasValue ?
                new ObjectParameter("grouplevels", grouplevels) :
                new ObjectParameter("grouplevels", typeof(int));
    
            var moreinfoParameter = moreinfo != null ?
                new ObjectParameter("moreinfo", moreinfo) :
                new ObjectParameter("moreinfo", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var approvebyParameter = approveby.HasValue ?
                new ObjectParameter("approveby", approveby) :
                new ObjectParameter("approveby", typeof(int));
    
            var gLUIDParameter = gLUID.HasValue ?
                new ObjectParameter("GLUID", gLUID) :
                new ObjectParameter("GLUID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_P_updateGroupLevels", groupnameParameter, grouplevelsParameter, moreinfoParameter, createbyParameter, approvebyParameter, gLUIDParameter);
        }
    
        public virtual int pd_p_updateHeadquestion(string headername, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> createby, Nullable<int> hdqid, Nullable<double> kpi_percent, Nullable<double> kbi_percent)
        {
            var headernameParameter = headername != null ?
                new ObjectParameter("headername", headername) :
                new ObjectParameter("headername", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var kpi_percentParameter = kpi_percent.HasValue ?
                new ObjectParameter("kpi_percent", kpi_percent) :
                new ObjectParameter("kpi_percent", typeof(double));
    
            var kbi_percentParameter = kbi_percent.HasValue ?
                new ObjectParameter("kbi_percent", kbi_percent) :
                new ObjectParameter("kbi_percent", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateHeadquestion", headernameParameter, startdateParameter, enddateParameter, createbyParameter, hdqidParameter, kpi_percentParameter, kbi_percentParameter);
        }
    
        public virtual int pd_p_updateListquestionemp(string questionname, Nullable<int> lqtid)
        {
            var questionnameParameter = questionname != null ?
                new ObjectParameter("questionname", questionname) :
                new ObjectParameter("questionname", typeof(string));
    
            var lqtidParameter = lqtid.HasValue ?
                new ObjectParameter("lqtid", lqtid) :
                new ObjectParameter("lqtid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateListquestionemp", questionnameParameter, lqtidParameter);
        }
    
        public virtual int pd_p_updateListquestionempFinished(Nullable<int> hdqid)
        {
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateListquestionempFinished", hdqidParameter);
        }
    
        public virtual int pd_p_updateQuestionManagerFinished(Nullable<int> emp_id, Nullable<int> hdqid, Nullable<int> mgrid)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateQuestionManagerFinished", emp_idParameter, hdqidParameter, mgridParameter);
        }
    
        public virtual int pd_p_updateQuestionpart(Nullable<int> tqid, Nullable<int> questionno, string questionpartname, Nullable<int> createby, Nullable<int> qtid, Nullable<double> score)
        {
            var tqidParameter = tqid.HasValue ?
                new ObjectParameter("tqid", tqid) :
                new ObjectParameter("tqid", typeof(int));
    
            var questionnoParameter = questionno.HasValue ?
                new ObjectParameter("questionno", questionno) :
                new ObjectParameter("questionno", typeof(int));
    
            var questionpartnameParameter = questionpartname != null ?
                new ObjectParameter("questionpartname", questionpartname) :
                new ObjectParameter("questionpartname", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var qtidParameter = qtid.HasValue ?
                new ObjectParameter("qtid", qtid) :
                new ObjectParameter("qtid", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateQuestionpart", tqidParameter, questionnoParameter, questionpartnameParameter, createbyParameter, qtidParameter, scoreParameter);
        }
    
        public virtual int pd_p_updatescore(Nullable<double> score_min, Nullable<double> score_max, string score_grade, string score_info, Nullable<int> createby, Nullable<int> pscid)
        {
            var score_minParameter = score_min.HasValue ?
                new ObjectParameter("score_min", score_min) :
                new ObjectParameter("score_min", typeof(double));
    
            var score_maxParameter = score_max.HasValue ?
                new ObjectParameter("score_max", score_max) :
                new ObjectParameter("score_max", typeof(double));
    
            var score_gradeParameter = score_grade != null ?
                new ObjectParameter("score_grade", score_grade) :
                new ObjectParameter("score_grade", typeof(string));
    
            var score_infoParameter = score_info != null ?
                new ObjectParameter("score_info", score_info) :
                new ObjectParameter("score_info", typeof(string));
    
            var createbyParameter = createby.HasValue ?
                new ObjectParameter("createby", createby) :
                new ObjectParameter("createby", typeof(int));
    
            var pscidParameter = pscid.HasValue ?
                new ObjectParameter("pscid", pscid) :
                new ObjectParameter("pscid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updatescore", score_minParameter, score_maxParameter, score_gradeParameter, score_infoParameter, createbyParameter, pscidParameter);
        }
    
        public virtual int pd_p_updateScorebyDirector(Nullable<int> lQDID, Nullable<double> score)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyDirector", lQDIDParameter, scoreParameter);
        }
    
        public virtual int pd_p_updateScorebyDirectorFinished(Nullable<int> emp_id, Nullable<int> hdqid, Nullable<int> directid)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var directidParameter = directid.HasValue ?
                new ObjectParameter("directid", directid) :
                new ObjectParameter("directid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyDirectorFinished", emp_idParameter, hdqidParameter, directidParameter);
        }
    
        public virtual int pd_p_updateScorebyDirectorReject(Nullable<int> emp_id, Nullable<int> hdqid, Nullable<int> mgrid)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyDirectorReject", emp_idParameter, hdqidParameter, mgridParameter);
        }
    
        public virtual int pd_p_updateScorebyEmp(Nullable<int> lQDID, Nullable<double> score, string comments, Nullable<int> updateCommit)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var updateCommitParameter = updateCommit.HasValue ?
                new ObjectParameter("updateCommit", updateCommit) :
                new ObjectParameter("updateCommit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyEmp", lQDIDParameter, scoreParameter, commentsParameter, updateCommitParameter);
        }
    
        public virtual int pd_p_updateScorebyEmpFinished(Nullable<int> emp_id)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyEmpFinished", emp_idParameter);
        }
    
        public virtual int pd_p_updateScorebyHR(Nullable<int> lQDID, Nullable<double> score, Nullable<int> inputby)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var inputbyParameter = inputby.HasValue ?
                new ObjectParameter("inputby", inputby) :
                new ObjectParameter("inputby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyHR", lQDIDParameter, scoreParameter, inputbyParameter);
        }
    
        public virtual int pd_p_updateScorebyHRFinished(Nullable<int> emp_id, Nullable<int> hdqid)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyHRFinished", emp_idParameter, hdqidParameter);
        }
    
        public virtual int pd_p_updateScorebyManager(Nullable<int> lQDID, Nullable<double> score, string comments)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyManager", lQDIDParameter, scoreParameter, commentsParameter);
        }
    
        public virtual int pd_p_updateScorebyManagerAddQuestion(Nullable<int> emp_id, Nullable<int> hdqid, Nullable<int> mgrid)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyManagerAddQuestion", emp_idParameter, hdqidParameter, mgridParameter);
        }
    
        public virtual int pd_p_updateScorebyManagerFinished(Nullable<int> emp_id, Nullable<int> hdqid, Nullable<int> mgrid, Nullable<int> hr_join)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var hdqidParameter = hdqid.HasValue ?
                new ObjectParameter("hdqid", hdqid) :
                new ObjectParameter("hdqid", typeof(int));
    
            var mgridParameter = mgrid.HasValue ?
                new ObjectParameter("mgrid", mgrid) :
                new ObjectParameter("mgrid", typeof(int));
    
            var hr_joinParameter = hr_join.HasValue ?
                new ObjectParameter("hr_join", hr_join) :
                new ObjectParameter("hr_join", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyManagerFinished", emp_idParameter, hdqidParameter, mgridParameter, hr_joinParameter);
        }
    
        public virtual ObjectResult<p_InsertLeaveRequest_BAK_Result> p_InsertLeaveRequest_BAK(string leaveRequestNo, Nullable<int> emp_id, Nullable<int> leaveTypeID, string leaveDay, Nullable<System.DateTime> startdate, Nullable<System.DateTime> endtDate, Nullable<System.DateTime> returnDate, Nullable<double> amountDay, string noted, Nullable<int> delegateEmpID, string fileAttached, Nullable<int> transactionType, string referAdd, Nullable<int> userAdd, string filePath, string fileTypeName, Nullable<int> from_device, string transactionNo, Nullable<bool> leavemorning, Nullable<bool> leaveafternoon)
        {
            var leaveRequestNoParameter = leaveRequestNo != null ?
                new ObjectParameter("leaveRequestNo", leaveRequestNo) :
                new ObjectParameter("leaveRequestNo", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var leaveTypeIDParameter = leaveTypeID.HasValue ?
                new ObjectParameter("leaveTypeID", leaveTypeID) :
                new ObjectParameter("leaveTypeID", typeof(int));
    
            var leaveDayParameter = leaveDay != null ?
                new ObjectParameter("leaveDay", leaveDay) :
                new ObjectParameter("leaveDay", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("endtDate", endtDate) :
                new ObjectParameter("endtDate", typeof(System.DateTime));
    
            var returnDateParameter = returnDate.HasValue ?
                new ObjectParameter("returnDate", returnDate) :
                new ObjectParameter("returnDate", typeof(System.DateTime));
    
            var amountDayParameter = amountDay.HasValue ?
                new ObjectParameter("amountDay", amountDay) :
                new ObjectParameter("amountDay", typeof(double));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var fileAttachedParameter = fileAttached != null ?
                new ObjectParameter("fileAttached", fileAttached) :
                new ObjectParameter("fileAttached", typeof(string));
    
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("transactionType", transactionType) :
                new ObjectParameter("transactionType", typeof(int));
    
            var referAddParameter = referAdd != null ?
                new ObjectParameter("referAdd", referAdd) :
                new ObjectParameter("referAdd", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("filePath", filePath) :
                new ObjectParameter("filePath", typeof(string));
    
            var fileTypeNameParameter = fileTypeName != null ?
                new ObjectParameter("fileTypeName", fileTypeName) :
                new ObjectParameter("fileTypeName", typeof(string));
    
            var from_deviceParameter = from_device.HasValue ?
                new ObjectParameter("from_device", from_device) :
                new ObjectParameter("from_device", typeof(int));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("transactionNo", transactionNo) :
                new ObjectParameter("transactionNo", typeof(string));
    
            var leavemorningParameter = leavemorning.HasValue ?
                new ObjectParameter("leavemorning", leavemorning) :
                new ObjectParameter("leavemorning", typeof(bool));
    
            var leaveafternoonParameter = leaveafternoon.HasValue ?
                new ObjectParameter("leaveafternoon", leaveafternoon) :
                new ObjectParameter("leaveafternoon", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_InsertLeaveRequest_BAK_Result>("p_InsertLeaveRequest_BAK", leaveRequestNoParameter, emp_idParameter, leaveTypeIDParameter, leaveDayParameter, startdateParameter, endtDateParameter, returnDateParameter, amountDayParameter, notedParameter, delegateEmpIDParameter, fileAttachedParameter, transactionTypeParameter, referAddParameter, userAddParameter, filePathParameter, fileTypeNameParameter, from_deviceParameter, transactionNoParameter, leavemorningParameter, leaveafternoonParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertDelegate_rq(Nullable<int> empID, Nullable<int> delegateEmpID, string noted, Nullable<System.DateTime> strDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> reCallDate, Nullable<int> user_add)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var strDateParameter = strDate.HasValue ?
                new ObjectParameter("strDate", strDate) :
                new ObjectParameter("strDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var reCallDateParameter = reCallDate.HasValue ?
                new ObjectParameter("reCallDate", reCallDate) :
                new ObjectParameter("reCallDate", typeof(System.DateTime));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertDelegate_rq", empIDParameter, delegateEmpIDParameter, notedParameter, strDateParameter, endDateParameter, reCallDateParameter, user_addParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_approve_delegate_rq(Nullable<int> delegat1, Nullable<int> delegate2)
        {
            var delegat1Parameter = delegat1.HasValue ?
                new ObjectParameter("delegat1", delegat1) :
                new ObjectParameter("delegat1", typeof(int));
    
            var delegate2Parameter = delegate2.HasValue ?
                new ObjectParameter("delegate2", delegate2) :
                new ObjectParameter("delegate2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_approve_delegate_rq", delegat1Parameter, delegate2Parameter);
        }
    
        public virtual int p_autoRecallDelegate_rq(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_autoRecallDelegate_rq", empidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_InsertDelegate_rq1(Nullable<int> empID, Nullable<int> delegateEmpID, string noted, Nullable<System.DateTime> strDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> reCallDate, Nullable<int> user_add)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var delegateEmpIDParameter = delegateEmpID.HasValue ?
                new ObjectParameter("delegateEmpID", delegateEmpID) :
                new ObjectParameter("delegateEmpID", typeof(int));
    
            var notedParameter = noted != null ?
                new ObjectParameter("noted", noted) :
                new ObjectParameter("noted", typeof(string));
    
            var strDateParameter = strDate.HasValue ?
                new ObjectParameter("strDate", strDate) :
                new ObjectParameter("strDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var reCallDateParameter = reCallDate.HasValue ?
                new ObjectParameter("reCallDate", reCallDate) :
                new ObjectParameter("reCallDate", typeof(System.DateTime));
    
            var user_addParameter = user_add.HasValue ?
                new ObjectParameter("user_add", user_add) :
                new ObjectParameter("user_add", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_InsertDelegate_rq1", empIDParameter, delegateEmpIDParameter, notedParameter, strDateParameter, endDateParameter, reCallDateParameter, user_addParameter);
        }
    
        public virtual ObjectResult<p_get_manager_Result> p_get_manager(Nullable<int> get_empid)
        {
            var get_empidParameter = get_empid.HasValue ?
                new ObjectParameter("get_empid", get_empid) :
                new ObjectParameter("get_empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_get_manager_Result>("p_get_manager", get_empidParameter);
        }
    
        public virtual ObjectResult<p_get_manager_1_Result> p_get_manager_1(Nullable<int> get_empid)
        {
            var get_empidParameter = get_empid.HasValue ?
                new ObjectParameter("get_empid", get_empid) :
                new ObjectParameter("get_empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_get_manager_1_Result>("p_get_manager_1", get_empidParameter);
        }
    
        public virtual int p_evaluate_final(Nullable<int> empId, Nullable<int> questionId, Nullable<int> userId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_evaluate_final", empIdParameter, questionIdParameter, userIdParameter);
        }
    
        public virtual int p_insertQuestionEMP(string empNo, Nullable<int> hDQID, Nullable<int> qTLID, string questionName, Nullable<int> masterScore, Nullable<int> qNumber)
        {
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            var hDQIDParameter = hDQID.HasValue ?
                new ObjectParameter("HDQID", hDQID) :
                new ObjectParameter("HDQID", typeof(int));
    
            var qTLIDParameter = qTLID.HasValue ?
                new ObjectParameter("QTLID", qTLID) :
                new ObjectParameter("QTLID", typeof(int));
    
            var questionNameParameter = questionName != null ?
                new ObjectParameter("questionName", questionName) :
                new ObjectParameter("questionName", typeof(string));
    
            var masterScoreParameter = masterScore.HasValue ?
                new ObjectParameter("masterScore", masterScore) :
                new ObjectParameter("masterScore", typeof(int));
    
            var qNumberParameter = qNumber.HasValue ?
                new ObjectParameter("qNumber", qNumber) :
                new ObjectParameter("qNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_insertQuestionEMP", empNoParameter, hDQIDParameter, qTLIDParameter, questionNameParameter, masterScoreParameter, qNumberParameter);
        }
    
        public virtual int p_reject_eavaluate(Nullable<int> headerid, Nullable<int> empId, string reasonReject, Nullable<int> userAdd)
        {
            var headeridParameter = headerid.HasValue ?
                new ObjectParameter("headerid", headerid) :
                new ObjectParameter("headerid", typeof(int));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            var reasonRejectParameter = reasonReject != null ?
                new ObjectParameter("reasonReject", reasonReject) :
                new ObjectParameter("reasonReject", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_reject_eavaluate", headeridParameter, empIdParameter, reasonRejectParameter, userAddParameter);
        }
    
        public virtual int pd_p_rejectByHr(Nullable<int> empid, Nullable<int> lQDID, string comments, Nullable<int> userAdd)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var userAddParameter = userAdd.HasValue ?
                new ObjectParameter("userAdd", userAdd) :
                new ObjectParameter("userAdd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_rejectByHr", empidParameter, lQDIDParameter, commentsParameter, userAddParameter);
        }
    
        public virtual int pd_p_updateScorebyHR1(Nullable<int> lQDID, Nullable<double> score, string comments, Nullable<int> updateCommit, Nullable<int> selOption)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var updateCommitParameter = updateCommit.HasValue ?
                new ObjectParameter("updateCommit", updateCommit) :
                new ObjectParameter("updateCommit", typeof(int));
    
            var selOptionParameter = selOption.HasValue ?
                new ObjectParameter("selOption", selOption) :
                new ObjectParameter("selOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyHR1", lQDIDParameter, scoreParameter, commentsParameter, updateCommitParameter, selOptionParameter);
        }
    
        public virtual int pd_p_updateScorebyManager1(Nullable<int> lQDID, Nullable<double> score, string comments, Nullable<int> updateCommit, Nullable<int> selOption)
        {
            var lQDIDParameter = lQDID.HasValue ?
                new ObjectParameter("LQDID", lQDID) :
                new ObjectParameter("LQDID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var updateCommitParameter = updateCommit.HasValue ?
                new ObjectParameter("updateCommit", updateCommit) :
                new ObjectParameter("updateCommit", typeof(int));
    
            var selOptionParameter = selOption.HasValue ?
                new ObjectParameter("selOption", selOption) :
                new ObjectParameter("selOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_p_updateScorebyManager1", lQDIDParameter, scoreParameter, commentsParameter, updateCommitParameter, selOptionParameter);
        }
    }
}
